
001memory_layout.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001174  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000060  08001304  08001304  00011304  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001364  08001364  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001364  08001364  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001364  08001364  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001364  08001364  00011364  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001368  08001368  00011368  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  0800136c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020064  2**0
                  CONTENTS
 10 .bss          00000170  20000064  20000064  00020064  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  200001d4  200001d4  00020064  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  0002008e  2**0
                  CONTENTS, READONLY
 14 .debug_info   00000943  00000000  00000000  000200d1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 0000030e  00000000  00000000  00020a14  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000118  00000000  00000000  00020d28  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 000000be  00000000  00000000  00020e40  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00002c89  00000000  00000000  00020efe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00001451  00000000  00000000  00023b87  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    00009784  00000000  00000000  00024fd8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  00000b08  00000000  00000000  0002e75c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000007e  00000000  00000000  0002f264  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000064 	.word	0x20000064
 80001ac:	00000000 	.word	0x00000000
 80001b0:	080012ec 	.word	0x080012ec

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000068 	.word	0x20000068
 80001cc:	080012ec 	.word	0x080012ec

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <main>:
int spam1 = -90000;
int spam2=1000;
int spam3=0;

int main(void)
{
 8000270:	b580      	push	{r7, lr}
 8000272:	af00      	add	r7, sp, #0
    /* Loop forever */
	printf("Hello World %d more time\r\n",1);
 8000274:	2101      	movs	r1, #1
 8000276:	4808      	ldr	r0, [pc, #32]	; (8000298 <main+0x28>)
 8000278:	f000 f9ca 	bl	8000610 <iprintf>

	spam3=spam1+spam2;
 800027c:	4b07      	ldr	r3, [pc, #28]	; (800029c <main+0x2c>)
 800027e:	681a      	ldr	r2, [r3, #0]
 8000280:	4b07      	ldr	r3, [pc, #28]	; (80002a0 <main+0x30>)
 8000282:	681b      	ldr	r3, [r3, #0]
 8000284:	4413      	add	r3, r2
 8000286:	4a07      	ldr	r2, [pc, #28]	; (80002a4 <main+0x34>)
 8000288:	6013      	str	r3, [r2, #0]

	printf("spam3 is %d\r\n",spam3);
 800028a:	4b06      	ldr	r3, [pc, #24]	; (80002a4 <main+0x34>)
 800028c:	681b      	ldr	r3, [r3, #0]
 800028e:	4619      	mov	r1, r3
 8000290:	4805      	ldr	r0, [pc, #20]	; (80002a8 <main+0x38>)
 8000292:	f000 f9bd 	bl	8000610 <iprintf>





	for(;;);
 8000296:	e7fe      	b.n	8000296 <main+0x26>
 8000298:	08001304 	.word	0x08001304
 800029c:	20000000 	.word	0x20000000
 80002a0:	20000004 	.word	0x20000004
 80002a4:	20000080 	.word	0x20000080
 80002a8:	08001320 	.word	0x08001320

080002ac <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80002ac:	b480      	push	{r7}
 80002ae:	b083      	sub	sp, #12
 80002b0:	af00      	add	r7, sp, #0
 80002b2:	4603      	mov	r3, r0
 80002b4:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80002b6:	4b0e      	ldr	r3, [pc, #56]	; (80002f0 <ITM_SendChar+0x44>)
 80002b8:	681b      	ldr	r3, [r3, #0]
 80002ba:	4a0d      	ldr	r2, [pc, #52]	; (80002f0 <ITM_SendChar+0x44>)
 80002bc:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80002c0:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80002c2:	4b0c      	ldr	r3, [pc, #48]	; (80002f4 <ITM_SendChar+0x48>)
 80002c4:	681b      	ldr	r3, [r3, #0]
 80002c6:	4a0b      	ldr	r2, [pc, #44]	; (80002f4 <ITM_SendChar+0x48>)
 80002c8:	f043 0301 	orr.w	r3, r3, #1
 80002cc:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80002ce:	bf00      	nop
 80002d0:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002d4:	681b      	ldr	r3, [r3, #0]
 80002d6:	f003 0301 	and.w	r3, r3, #1
 80002da:	2b00      	cmp	r3, #0
 80002dc:	d0f8      	beq.n	80002d0 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80002de:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80002e2:	79fb      	ldrb	r3, [r7, #7]
 80002e4:	6013      	str	r3, [r2, #0]
}
 80002e6:	bf00      	nop
 80002e8:	370c      	adds	r7, #12
 80002ea:	46bd      	mov	sp, r7
 80002ec:	bc80      	pop	{r7}
 80002ee:	4770      	bx	lr
 80002f0:	e000edfc 	.word	0xe000edfc
 80002f4:	e0000e00 	.word	0xe0000e00

080002f8 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002f8:	b580      	push	{r7, lr}
 80002fa:	b086      	sub	sp, #24
 80002fc:	af00      	add	r7, sp, #0
 80002fe:	60f8      	str	r0, [r7, #12]
 8000300:	60b9      	str	r1, [r7, #8]
 8000302:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000304:	2300      	movs	r3, #0
 8000306:	617b      	str	r3, [r7, #20]
 8000308:	e00a      	b.n	8000320 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800030a:	f3af 8000 	nop.w
 800030e:	4601      	mov	r1, r0
 8000310:	68bb      	ldr	r3, [r7, #8]
 8000312:	1c5a      	adds	r2, r3, #1
 8000314:	60ba      	str	r2, [r7, #8]
 8000316:	b2ca      	uxtb	r2, r1
 8000318:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800031a:	697b      	ldr	r3, [r7, #20]
 800031c:	3301      	adds	r3, #1
 800031e:	617b      	str	r3, [r7, #20]
 8000320:	697a      	ldr	r2, [r7, #20]
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	429a      	cmp	r2, r3
 8000326:	dbf0      	blt.n	800030a <_read+0x12>
  }

  return len;
 8000328:	687b      	ldr	r3, [r7, #4]
}
 800032a:	4618      	mov	r0, r3
 800032c:	3718      	adds	r7, #24
 800032e:	46bd      	mov	sp, r7
 8000330:	bd80      	pop	{r7, pc}

08000332 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000332:	b580      	push	{r7, lr}
 8000334:	b086      	sub	sp, #24
 8000336:	af00      	add	r7, sp, #0
 8000338:	60f8      	str	r0, [r7, #12]
 800033a:	60b9      	str	r1, [r7, #8]
 800033c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800033e:	2300      	movs	r3, #0
 8000340:	617b      	str	r3, [r7, #20]
 8000342:	e009      	b.n	8000358 <_write+0x26>
  {
    // __io_putchar(*ptr++);
	ITM_SendChar(*ptr++);
 8000344:	68bb      	ldr	r3, [r7, #8]
 8000346:	1c5a      	adds	r2, r3, #1
 8000348:	60ba      	str	r2, [r7, #8]
 800034a:	781b      	ldrb	r3, [r3, #0]
 800034c:	4618      	mov	r0, r3
 800034e:	f7ff ffad 	bl	80002ac <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000352:	697b      	ldr	r3, [r7, #20]
 8000354:	3301      	adds	r3, #1
 8000356:	617b      	str	r3, [r7, #20]
 8000358:	697a      	ldr	r2, [r7, #20]
 800035a:	687b      	ldr	r3, [r7, #4]
 800035c:	429a      	cmp	r2, r3
 800035e:	dbf1      	blt.n	8000344 <_write+0x12>
  }
  return len;
 8000360:	687b      	ldr	r3, [r7, #4]
}
 8000362:	4618      	mov	r0, r3
 8000364:	3718      	adds	r7, #24
 8000366:	46bd      	mov	sp, r7
 8000368:	bd80      	pop	{r7, pc}

0800036a <_close>:

int _close(int file)
{
 800036a:	b480      	push	{r7}
 800036c:	b083      	sub	sp, #12
 800036e:	af00      	add	r7, sp, #0
 8000370:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000372:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000376:	4618      	mov	r0, r3
 8000378:	370c      	adds	r7, #12
 800037a:	46bd      	mov	sp, r7
 800037c:	bc80      	pop	{r7}
 800037e:	4770      	bx	lr

08000380 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000380:	b480      	push	{r7}
 8000382:	b083      	sub	sp, #12
 8000384:	af00      	add	r7, sp, #0
 8000386:	6078      	str	r0, [r7, #4]
 8000388:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800038a:	683b      	ldr	r3, [r7, #0]
 800038c:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000390:	605a      	str	r2, [r3, #4]
  return 0;
 8000392:	2300      	movs	r3, #0
}
 8000394:	4618      	mov	r0, r3
 8000396:	370c      	adds	r7, #12
 8000398:	46bd      	mov	sp, r7
 800039a:	bc80      	pop	{r7}
 800039c:	4770      	bx	lr

0800039e <_isatty>:

int _isatty(int file)
{
 800039e:	b480      	push	{r7}
 80003a0:	b083      	sub	sp, #12
 80003a2:	af00      	add	r7, sp, #0
 80003a4:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80003a6:	2301      	movs	r3, #1
}
 80003a8:	4618      	mov	r0, r3
 80003aa:	370c      	adds	r7, #12
 80003ac:	46bd      	mov	sp, r7
 80003ae:	bc80      	pop	{r7}
 80003b0:	4770      	bx	lr

080003b2 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003b2:	b480      	push	{r7}
 80003b4:	b085      	sub	sp, #20
 80003b6:	af00      	add	r7, sp, #0
 80003b8:	60f8      	str	r0, [r7, #12]
 80003ba:	60b9      	str	r1, [r7, #8]
 80003bc:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80003be:	2300      	movs	r3, #0
}
 80003c0:	4618      	mov	r0, r3
 80003c2:	3714      	adds	r7, #20
 80003c4:	46bd      	mov	sp, r7
 80003c6:	bc80      	pop	{r7}
 80003c8:	4770      	bx	lr
	...

080003cc <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003cc:	b580      	push	{r7, lr}
 80003ce:	b086      	sub	sp, #24
 80003d0:	af00      	add	r7, sp, #0
 80003d2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003d4:	4a14      	ldr	r2, [pc, #80]	; (8000428 <_sbrk+0x5c>)
 80003d6:	4b15      	ldr	r3, [pc, #84]	; (800042c <_sbrk+0x60>)
 80003d8:	1ad3      	subs	r3, r2, r3
 80003da:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003dc:	697b      	ldr	r3, [r7, #20]
 80003de:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003e0:	4b13      	ldr	r3, [pc, #76]	; (8000430 <_sbrk+0x64>)
 80003e2:	681b      	ldr	r3, [r3, #0]
 80003e4:	2b00      	cmp	r3, #0
 80003e6:	d102      	bne.n	80003ee <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003e8:	4b11      	ldr	r3, [pc, #68]	; (8000430 <_sbrk+0x64>)
 80003ea:	4a12      	ldr	r2, [pc, #72]	; (8000434 <_sbrk+0x68>)
 80003ec:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003ee:	4b10      	ldr	r3, [pc, #64]	; (8000430 <_sbrk+0x64>)
 80003f0:	681a      	ldr	r2, [r3, #0]
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	4413      	add	r3, r2
 80003f6:	693a      	ldr	r2, [r7, #16]
 80003f8:	429a      	cmp	r2, r3
 80003fa:	d207      	bcs.n	800040c <_sbrk+0x40>
  {
    errno = ENOMEM;
 80003fc:	f000 f9ac 	bl	8000758 <__errno>
 8000400:	4603      	mov	r3, r0
 8000402:	220c      	movs	r2, #12
 8000404:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000406:	f04f 33ff 	mov.w	r3, #4294967295
 800040a:	e009      	b.n	8000420 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800040c:	4b08      	ldr	r3, [pc, #32]	; (8000430 <_sbrk+0x64>)
 800040e:	681b      	ldr	r3, [r3, #0]
 8000410:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000412:	4b07      	ldr	r3, [pc, #28]	; (8000430 <_sbrk+0x64>)
 8000414:	681a      	ldr	r2, [r3, #0]
 8000416:	687b      	ldr	r3, [r7, #4]
 8000418:	4413      	add	r3, r2
 800041a:	4a05      	ldr	r2, [pc, #20]	; (8000430 <_sbrk+0x64>)
 800041c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800041e:	68fb      	ldr	r3, [r7, #12]
}
 8000420:	4618      	mov	r0, r3
 8000422:	3718      	adds	r7, #24
 8000424:	46bd      	mov	sp, r7
 8000426:	bd80      	pop	{r7, pc}
 8000428:	20020000 	.word	0x20020000
 800042c:	00000400 	.word	0x00000400
 8000430:	20000084 	.word	0x20000084
 8000434:	200001d8 	.word	0x200001d8

08000438 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000438:	480d      	ldr	r0, [pc, #52]	; (8000470 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800043a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800043c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000440:	480c      	ldr	r0, [pc, #48]	; (8000474 <LoopForever+0x6>)
  ldr r1, =_edata
 8000442:	490d      	ldr	r1, [pc, #52]	; (8000478 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000444:	4a0d      	ldr	r2, [pc, #52]	; (800047c <LoopForever+0xe>)
  movs r3, #0
 8000446:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000448:	e002      	b.n	8000450 <LoopCopyDataInit>

0800044a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800044a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800044c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800044e:	3304      	adds	r3, #4

08000450 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000450:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000452:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000454:	d3f9      	bcc.n	800044a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000456:	4a0a      	ldr	r2, [pc, #40]	; (8000480 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000458:	4c0a      	ldr	r4, [pc, #40]	; (8000484 <LoopForever+0x16>)
  movs r3, #0
 800045a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800045c:	e001      	b.n	8000462 <LoopFillZerobss>

0800045e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800045e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000460:	3204      	adds	r2, #4

08000462 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000462:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000464:	d3fb      	bcc.n	800045e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000466:	f000 f97d 	bl	8000764 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800046a:	f7ff ff01 	bl	8000270 <main>

0800046e <LoopForever>:

LoopForever:
  b LoopForever
 800046e:	e7fe      	b.n	800046e <LoopForever>
  ldr   r0, =_estack
 8000470:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000474:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000478:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 800047c:	0800136c 	.word	0x0800136c
  ldr r2, =_sbss
 8000480:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000484:	200001d4 	.word	0x200001d4

08000488 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000488:	e7fe      	b.n	8000488 <ADC_IRQHandler>
	...

0800048c <std>:
 800048c:	2300      	movs	r3, #0
 800048e:	b510      	push	{r4, lr}
 8000490:	4604      	mov	r4, r0
 8000492:	e9c0 3300 	strd	r3, r3, [r0]
 8000496:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800049a:	6083      	str	r3, [r0, #8]
 800049c:	8181      	strh	r1, [r0, #12]
 800049e:	6643      	str	r3, [r0, #100]	; 0x64
 80004a0:	81c2      	strh	r2, [r0, #14]
 80004a2:	6183      	str	r3, [r0, #24]
 80004a4:	4619      	mov	r1, r3
 80004a6:	2208      	movs	r2, #8
 80004a8:	305c      	adds	r0, #92	; 0x5c
 80004aa:	f000 f906 	bl	80006ba <memset>
 80004ae:	4b0d      	ldr	r3, [pc, #52]	; (80004e4 <std+0x58>)
 80004b0:	6263      	str	r3, [r4, #36]	; 0x24
 80004b2:	4b0d      	ldr	r3, [pc, #52]	; (80004e8 <std+0x5c>)
 80004b4:	62a3      	str	r3, [r4, #40]	; 0x28
 80004b6:	4b0d      	ldr	r3, [pc, #52]	; (80004ec <std+0x60>)
 80004b8:	62e3      	str	r3, [r4, #44]	; 0x2c
 80004ba:	4b0d      	ldr	r3, [pc, #52]	; (80004f0 <std+0x64>)
 80004bc:	6323      	str	r3, [r4, #48]	; 0x30
 80004be:	4b0d      	ldr	r3, [pc, #52]	; (80004f4 <std+0x68>)
 80004c0:	6224      	str	r4, [r4, #32]
 80004c2:	429c      	cmp	r4, r3
 80004c4:	d006      	beq.n	80004d4 <std+0x48>
 80004c6:	f103 0268 	add.w	r2, r3, #104	; 0x68
 80004ca:	4294      	cmp	r4, r2
 80004cc:	d002      	beq.n	80004d4 <std+0x48>
 80004ce:	33d0      	adds	r3, #208	; 0xd0
 80004d0:	429c      	cmp	r4, r3
 80004d2:	d105      	bne.n	80004e0 <std+0x54>
 80004d4:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80004d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004dc:	f000 b966 	b.w	80007ac <__retarget_lock_init_recursive>
 80004e0:	bd10      	pop	{r4, pc}
 80004e2:	bf00      	nop
 80004e4:	08000635 	.word	0x08000635
 80004e8:	08000657 	.word	0x08000657
 80004ec:	0800068f 	.word	0x0800068f
 80004f0:	080006b3 	.word	0x080006b3
 80004f4:	20000088 	.word	0x20000088

080004f8 <stdio_exit_handler>:
 80004f8:	4a02      	ldr	r2, [pc, #8]	; (8000504 <stdio_exit_handler+0xc>)
 80004fa:	4903      	ldr	r1, [pc, #12]	; (8000508 <stdio_exit_handler+0x10>)
 80004fc:	4803      	ldr	r0, [pc, #12]	; (800050c <stdio_exit_handler+0x14>)
 80004fe:	f000 b869 	b.w	80005d4 <_fwalk_sglue>
 8000502:	bf00      	nop
 8000504:	20000008 	.word	0x20000008
 8000508:	08001049 	.word	0x08001049
 800050c:	20000014 	.word	0x20000014

08000510 <cleanup_stdio>:
 8000510:	6841      	ldr	r1, [r0, #4]
 8000512:	4b0c      	ldr	r3, [pc, #48]	; (8000544 <cleanup_stdio+0x34>)
 8000514:	4299      	cmp	r1, r3
 8000516:	b510      	push	{r4, lr}
 8000518:	4604      	mov	r4, r0
 800051a:	d001      	beq.n	8000520 <cleanup_stdio+0x10>
 800051c:	f000 fd94 	bl	8001048 <_fflush_r>
 8000520:	68a1      	ldr	r1, [r4, #8]
 8000522:	4b09      	ldr	r3, [pc, #36]	; (8000548 <cleanup_stdio+0x38>)
 8000524:	4299      	cmp	r1, r3
 8000526:	d002      	beq.n	800052e <cleanup_stdio+0x1e>
 8000528:	4620      	mov	r0, r4
 800052a:	f000 fd8d 	bl	8001048 <_fflush_r>
 800052e:	68e1      	ldr	r1, [r4, #12]
 8000530:	4b06      	ldr	r3, [pc, #24]	; (800054c <cleanup_stdio+0x3c>)
 8000532:	4299      	cmp	r1, r3
 8000534:	d004      	beq.n	8000540 <cleanup_stdio+0x30>
 8000536:	4620      	mov	r0, r4
 8000538:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800053c:	f000 bd84 	b.w	8001048 <_fflush_r>
 8000540:	bd10      	pop	{r4, pc}
 8000542:	bf00      	nop
 8000544:	20000088 	.word	0x20000088
 8000548:	200000f0 	.word	0x200000f0
 800054c:	20000158 	.word	0x20000158

08000550 <global_stdio_init.part.0>:
 8000550:	b510      	push	{r4, lr}
 8000552:	4b0b      	ldr	r3, [pc, #44]	; (8000580 <global_stdio_init.part.0+0x30>)
 8000554:	4c0b      	ldr	r4, [pc, #44]	; (8000584 <global_stdio_init.part.0+0x34>)
 8000556:	4a0c      	ldr	r2, [pc, #48]	; (8000588 <global_stdio_init.part.0+0x38>)
 8000558:	601a      	str	r2, [r3, #0]
 800055a:	4620      	mov	r0, r4
 800055c:	2200      	movs	r2, #0
 800055e:	2104      	movs	r1, #4
 8000560:	f7ff ff94 	bl	800048c <std>
 8000564:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8000568:	2201      	movs	r2, #1
 800056a:	2109      	movs	r1, #9
 800056c:	f7ff ff8e 	bl	800048c <std>
 8000570:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8000574:	2202      	movs	r2, #2
 8000576:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800057a:	2112      	movs	r1, #18
 800057c:	f7ff bf86 	b.w	800048c <std>
 8000580:	200001c0 	.word	0x200001c0
 8000584:	20000088 	.word	0x20000088
 8000588:	080004f9 	.word	0x080004f9

0800058c <__sfp_lock_acquire>:
 800058c:	4801      	ldr	r0, [pc, #4]	; (8000594 <__sfp_lock_acquire+0x8>)
 800058e:	f000 b90e 	b.w	80007ae <__retarget_lock_acquire_recursive>
 8000592:	bf00      	nop
 8000594:	200001c9 	.word	0x200001c9

08000598 <__sfp_lock_release>:
 8000598:	4801      	ldr	r0, [pc, #4]	; (80005a0 <__sfp_lock_release+0x8>)
 800059a:	f000 b909 	b.w	80007b0 <__retarget_lock_release_recursive>
 800059e:	bf00      	nop
 80005a0:	200001c9 	.word	0x200001c9

080005a4 <__sinit>:
 80005a4:	b510      	push	{r4, lr}
 80005a6:	4604      	mov	r4, r0
 80005a8:	f7ff fff0 	bl	800058c <__sfp_lock_acquire>
 80005ac:	6a23      	ldr	r3, [r4, #32]
 80005ae:	b11b      	cbz	r3, 80005b8 <__sinit+0x14>
 80005b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005b4:	f7ff bff0 	b.w	8000598 <__sfp_lock_release>
 80005b8:	4b04      	ldr	r3, [pc, #16]	; (80005cc <__sinit+0x28>)
 80005ba:	6223      	str	r3, [r4, #32]
 80005bc:	4b04      	ldr	r3, [pc, #16]	; (80005d0 <__sinit+0x2c>)
 80005be:	681b      	ldr	r3, [r3, #0]
 80005c0:	2b00      	cmp	r3, #0
 80005c2:	d1f5      	bne.n	80005b0 <__sinit+0xc>
 80005c4:	f7ff ffc4 	bl	8000550 <global_stdio_init.part.0>
 80005c8:	e7f2      	b.n	80005b0 <__sinit+0xc>
 80005ca:	bf00      	nop
 80005cc:	08000511 	.word	0x08000511
 80005d0:	200001c0 	.word	0x200001c0

080005d4 <_fwalk_sglue>:
 80005d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80005d8:	4607      	mov	r7, r0
 80005da:	4688      	mov	r8, r1
 80005dc:	4614      	mov	r4, r2
 80005de:	2600      	movs	r6, #0
 80005e0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80005e4:	f1b9 0901 	subs.w	r9, r9, #1
 80005e8:	d505      	bpl.n	80005f6 <_fwalk_sglue+0x22>
 80005ea:	6824      	ldr	r4, [r4, #0]
 80005ec:	2c00      	cmp	r4, #0
 80005ee:	d1f7      	bne.n	80005e0 <_fwalk_sglue+0xc>
 80005f0:	4630      	mov	r0, r6
 80005f2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80005f6:	89ab      	ldrh	r3, [r5, #12]
 80005f8:	2b01      	cmp	r3, #1
 80005fa:	d907      	bls.n	800060c <_fwalk_sglue+0x38>
 80005fc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000600:	3301      	adds	r3, #1
 8000602:	d003      	beq.n	800060c <_fwalk_sglue+0x38>
 8000604:	4629      	mov	r1, r5
 8000606:	4638      	mov	r0, r7
 8000608:	47c0      	blx	r8
 800060a:	4306      	orrs	r6, r0
 800060c:	3568      	adds	r5, #104	; 0x68
 800060e:	e7e9      	b.n	80005e4 <_fwalk_sglue+0x10>

08000610 <iprintf>:
 8000610:	b40f      	push	{r0, r1, r2, r3}
 8000612:	b507      	push	{r0, r1, r2, lr}
 8000614:	4906      	ldr	r1, [pc, #24]	; (8000630 <iprintf+0x20>)
 8000616:	ab04      	add	r3, sp, #16
 8000618:	6808      	ldr	r0, [r1, #0]
 800061a:	f853 2b04 	ldr.w	r2, [r3], #4
 800061e:	6881      	ldr	r1, [r0, #8]
 8000620:	9301      	str	r3, [sp, #4]
 8000622:	f000 f9e5 	bl	80009f0 <_vfiprintf_r>
 8000626:	b003      	add	sp, #12
 8000628:	f85d eb04 	ldr.w	lr, [sp], #4
 800062c:	b004      	add	sp, #16
 800062e:	4770      	bx	lr
 8000630:	20000060 	.word	0x20000060

08000634 <__sread>:
 8000634:	b510      	push	{r4, lr}
 8000636:	460c      	mov	r4, r1
 8000638:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800063c:	f000 f868 	bl	8000710 <_read_r>
 8000640:	2800      	cmp	r0, #0
 8000642:	bfab      	itete	ge
 8000644:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000646:	89a3      	ldrhlt	r3, [r4, #12]
 8000648:	181b      	addge	r3, r3, r0
 800064a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800064e:	bfac      	ite	ge
 8000650:	6563      	strge	r3, [r4, #84]	; 0x54
 8000652:	81a3      	strhlt	r3, [r4, #12]
 8000654:	bd10      	pop	{r4, pc}

08000656 <__swrite>:
 8000656:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800065a:	461f      	mov	r7, r3
 800065c:	898b      	ldrh	r3, [r1, #12]
 800065e:	05db      	lsls	r3, r3, #23
 8000660:	4605      	mov	r5, r0
 8000662:	460c      	mov	r4, r1
 8000664:	4616      	mov	r6, r2
 8000666:	d505      	bpl.n	8000674 <__swrite+0x1e>
 8000668:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800066c:	2302      	movs	r3, #2
 800066e:	2200      	movs	r2, #0
 8000670:	f000 f83c 	bl	80006ec <_lseek_r>
 8000674:	89a3      	ldrh	r3, [r4, #12]
 8000676:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800067a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800067e:	81a3      	strh	r3, [r4, #12]
 8000680:	4632      	mov	r2, r6
 8000682:	463b      	mov	r3, r7
 8000684:	4628      	mov	r0, r5
 8000686:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800068a:	f000 b853 	b.w	8000734 <_write_r>

0800068e <__sseek>:
 800068e:	b510      	push	{r4, lr}
 8000690:	460c      	mov	r4, r1
 8000692:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000696:	f000 f829 	bl	80006ec <_lseek_r>
 800069a:	1c43      	adds	r3, r0, #1
 800069c:	89a3      	ldrh	r3, [r4, #12]
 800069e:	bf15      	itete	ne
 80006a0:	6560      	strne	r0, [r4, #84]	; 0x54
 80006a2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80006a6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80006aa:	81a3      	strheq	r3, [r4, #12]
 80006ac:	bf18      	it	ne
 80006ae:	81a3      	strhne	r3, [r4, #12]
 80006b0:	bd10      	pop	{r4, pc}

080006b2 <__sclose>:
 80006b2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006b6:	f000 b809 	b.w	80006cc <_close_r>

080006ba <memset>:
 80006ba:	4402      	add	r2, r0
 80006bc:	4603      	mov	r3, r0
 80006be:	4293      	cmp	r3, r2
 80006c0:	d100      	bne.n	80006c4 <memset+0xa>
 80006c2:	4770      	bx	lr
 80006c4:	f803 1b01 	strb.w	r1, [r3], #1
 80006c8:	e7f9      	b.n	80006be <memset+0x4>
	...

080006cc <_close_r>:
 80006cc:	b538      	push	{r3, r4, r5, lr}
 80006ce:	4d06      	ldr	r5, [pc, #24]	; (80006e8 <_close_r+0x1c>)
 80006d0:	2300      	movs	r3, #0
 80006d2:	4604      	mov	r4, r0
 80006d4:	4608      	mov	r0, r1
 80006d6:	602b      	str	r3, [r5, #0]
 80006d8:	f7ff fe47 	bl	800036a <_close>
 80006dc:	1c43      	adds	r3, r0, #1
 80006de:	d102      	bne.n	80006e6 <_close_r+0x1a>
 80006e0:	682b      	ldr	r3, [r5, #0]
 80006e2:	b103      	cbz	r3, 80006e6 <_close_r+0x1a>
 80006e4:	6023      	str	r3, [r4, #0]
 80006e6:	bd38      	pop	{r3, r4, r5, pc}
 80006e8:	200001c4 	.word	0x200001c4

080006ec <_lseek_r>:
 80006ec:	b538      	push	{r3, r4, r5, lr}
 80006ee:	4d07      	ldr	r5, [pc, #28]	; (800070c <_lseek_r+0x20>)
 80006f0:	4604      	mov	r4, r0
 80006f2:	4608      	mov	r0, r1
 80006f4:	4611      	mov	r1, r2
 80006f6:	2200      	movs	r2, #0
 80006f8:	602a      	str	r2, [r5, #0]
 80006fa:	461a      	mov	r2, r3
 80006fc:	f7ff fe59 	bl	80003b2 <_lseek>
 8000700:	1c43      	adds	r3, r0, #1
 8000702:	d102      	bne.n	800070a <_lseek_r+0x1e>
 8000704:	682b      	ldr	r3, [r5, #0]
 8000706:	b103      	cbz	r3, 800070a <_lseek_r+0x1e>
 8000708:	6023      	str	r3, [r4, #0]
 800070a:	bd38      	pop	{r3, r4, r5, pc}
 800070c:	200001c4 	.word	0x200001c4

08000710 <_read_r>:
 8000710:	b538      	push	{r3, r4, r5, lr}
 8000712:	4d07      	ldr	r5, [pc, #28]	; (8000730 <_read_r+0x20>)
 8000714:	4604      	mov	r4, r0
 8000716:	4608      	mov	r0, r1
 8000718:	4611      	mov	r1, r2
 800071a:	2200      	movs	r2, #0
 800071c:	602a      	str	r2, [r5, #0]
 800071e:	461a      	mov	r2, r3
 8000720:	f7ff fdea 	bl	80002f8 <_read>
 8000724:	1c43      	adds	r3, r0, #1
 8000726:	d102      	bne.n	800072e <_read_r+0x1e>
 8000728:	682b      	ldr	r3, [r5, #0]
 800072a:	b103      	cbz	r3, 800072e <_read_r+0x1e>
 800072c:	6023      	str	r3, [r4, #0]
 800072e:	bd38      	pop	{r3, r4, r5, pc}
 8000730:	200001c4 	.word	0x200001c4

08000734 <_write_r>:
 8000734:	b538      	push	{r3, r4, r5, lr}
 8000736:	4d07      	ldr	r5, [pc, #28]	; (8000754 <_write_r+0x20>)
 8000738:	4604      	mov	r4, r0
 800073a:	4608      	mov	r0, r1
 800073c:	4611      	mov	r1, r2
 800073e:	2200      	movs	r2, #0
 8000740:	602a      	str	r2, [r5, #0]
 8000742:	461a      	mov	r2, r3
 8000744:	f7ff fdf5 	bl	8000332 <_write>
 8000748:	1c43      	adds	r3, r0, #1
 800074a:	d102      	bne.n	8000752 <_write_r+0x1e>
 800074c:	682b      	ldr	r3, [r5, #0]
 800074e:	b103      	cbz	r3, 8000752 <_write_r+0x1e>
 8000750:	6023      	str	r3, [r4, #0]
 8000752:	bd38      	pop	{r3, r4, r5, pc}
 8000754:	200001c4 	.word	0x200001c4

08000758 <__errno>:
 8000758:	4b01      	ldr	r3, [pc, #4]	; (8000760 <__errno+0x8>)
 800075a:	6818      	ldr	r0, [r3, #0]
 800075c:	4770      	bx	lr
 800075e:	bf00      	nop
 8000760:	20000060 	.word	0x20000060

08000764 <__libc_init_array>:
 8000764:	b570      	push	{r4, r5, r6, lr}
 8000766:	4d0d      	ldr	r5, [pc, #52]	; (800079c <__libc_init_array+0x38>)
 8000768:	4c0d      	ldr	r4, [pc, #52]	; (80007a0 <__libc_init_array+0x3c>)
 800076a:	1b64      	subs	r4, r4, r5
 800076c:	10a4      	asrs	r4, r4, #2
 800076e:	2600      	movs	r6, #0
 8000770:	42a6      	cmp	r6, r4
 8000772:	d109      	bne.n	8000788 <__libc_init_array+0x24>
 8000774:	4d0b      	ldr	r5, [pc, #44]	; (80007a4 <__libc_init_array+0x40>)
 8000776:	4c0c      	ldr	r4, [pc, #48]	; (80007a8 <__libc_init_array+0x44>)
 8000778:	f000 fdb8 	bl	80012ec <_init>
 800077c:	1b64      	subs	r4, r4, r5
 800077e:	10a4      	asrs	r4, r4, #2
 8000780:	2600      	movs	r6, #0
 8000782:	42a6      	cmp	r6, r4
 8000784:	d105      	bne.n	8000792 <__libc_init_array+0x2e>
 8000786:	bd70      	pop	{r4, r5, r6, pc}
 8000788:	f855 3b04 	ldr.w	r3, [r5], #4
 800078c:	4798      	blx	r3
 800078e:	3601      	adds	r6, #1
 8000790:	e7ee      	b.n	8000770 <__libc_init_array+0xc>
 8000792:	f855 3b04 	ldr.w	r3, [r5], #4
 8000796:	4798      	blx	r3
 8000798:	3601      	adds	r6, #1
 800079a:	e7f2      	b.n	8000782 <__libc_init_array+0x1e>
 800079c:	08001364 	.word	0x08001364
 80007a0:	08001364 	.word	0x08001364
 80007a4:	08001364 	.word	0x08001364
 80007a8:	08001368 	.word	0x08001368

080007ac <__retarget_lock_init_recursive>:
 80007ac:	4770      	bx	lr

080007ae <__retarget_lock_acquire_recursive>:
 80007ae:	4770      	bx	lr

080007b0 <__retarget_lock_release_recursive>:
 80007b0:	4770      	bx	lr
	...

080007b4 <_free_r>:
 80007b4:	b538      	push	{r3, r4, r5, lr}
 80007b6:	4605      	mov	r5, r0
 80007b8:	2900      	cmp	r1, #0
 80007ba:	d041      	beq.n	8000840 <_free_r+0x8c>
 80007bc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80007c0:	1f0c      	subs	r4, r1, #4
 80007c2:	2b00      	cmp	r3, #0
 80007c4:	bfb8      	it	lt
 80007c6:	18e4      	addlt	r4, r4, r3
 80007c8:	f000 f8de 	bl	8000988 <__malloc_lock>
 80007cc:	4a1d      	ldr	r2, [pc, #116]	; (8000844 <_free_r+0x90>)
 80007ce:	6813      	ldr	r3, [r2, #0]
 80007d0:	b933      	cbnz	r3, 80007e0 <_free_r+0x2c>
 80007d2:	6063      	str	r3, [r4, #4]
 80007d4:	6014      	str	r4, [r2, #0]
 80007d6:	4628      	mov	r0, r5
 80007d8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80007dc:	f000 b8da 	b.w	8000994 <__malloc_unlock>
 80007e0:	42a3      	cmp	r3, r4
 80007e2:	d908      	bls.n	80007f6 <_free_r+0x42>
 80007e4:	6820      	ldr	r0, [r4, #0]
 80007e6:	1821      	adds	r1, r4, r0
 80007e8:	428b      	cmp	r3, r1
 80007ea:	bf01      	itttt	eq
 80007ec:	6819      	ldreq	r1, [r3, #0]
 80007ee:	685b      	ldreq	r3, [r3, #4]
 80007f0:	1809      	addeq	r1, r1, r0
 80007f2:	6021      	streq	r1, [r4, #0]
 80007f4:	e7ed      	b.n	80007d2 <_free_r+0x1e>
 80007f6:	461a      	mov	r2, r3
 80007f8:	685b      	ldr	r3, [r3, #4]
 80007fa:	b10b      	cbz	r3, 8000800 <_free_r+0x4c>
 80007fc:	42a3      	cmp	r3, r4
 80007fe:	d9fa      	bls.n	80007f6 <_free_r+0x42>
 8000800:	6811      	ldr	r1, [r2, #0]
 8000802:	1850      	adds	r0, r2, r1
 8000804:	42a0      	cmp	r0, r4
 8000806:	d10b      	bne.n	8000820 <_free_r+0x6c>
 8000808:	6820      	ldr	r0, [r4, #0]
 800080a:	4401      	add	r1, r0
 800080c:	1850      	adds	r0, r2, r1
 800080e:	4283      	cmp	r3, r0
 8000810:	6011      	str	r1, [r2, #0]
 8000812:	d1e0      	bne.n	80007d6 <_free_r+0x22>
 8000814:	6818      	ldr	r0, [r3, #0]
 8000816:	685b      	ldr	r3, [r3, #4]
 8000818:	6053      	str	r3, [r2, #4]
 800081a:	4408      	add	r0, r1
 800081c:	6010      	str	r0, [r2, #0]
 800081e:	e7da      	b.n	80007d6 <_free_r+0x22>
 8000820:	d902      	bls.n	8000828 <_free_r+0x74>
 8000822:	230c      	movs	r3, #12
 8000824:	602b      	str	r3, [r5, #0]
 8000826:	e7d6      	b.n	80007d6 <_free_r+0x22>
 8000828:	6820      	ldr	r0, [r4, #0]
 800082a:	1821      	adds	r1, r4, r0
 800082c:	428b      	cmp	r3, r1
 800082e:	bf04      	itt	eq
 8000830:	6819      	ldreq	r1, [r3, #0]
 8000832:	685b      	ldreq	r3, [r3, #4]
 8000834:	6063      	str	r3, [r4, #4]
 8000836:	bf04      	itt	eq
 8000838:	1809      	addeq	r1, r1, r0
 800083a:	6021      	streq	r1, [r4, #0]
 800083c:	6054      	str	r4, [r2, #4]
 800083e:	e7ca      	b.n	80007d6 <_free_r+0x22>
 8000840:	bd38      	pop	{r3, r4, r5, pc}
 8000842:	bf00      	nop
 8000844:	200001cc 	.word	0x200001cc

08000848 <sbrk_aligned>:
 8000848:	b570      	push	{r4, r5, r6, lr}
 800084a:	4e0e      	ldr	r6, [pc, #56]	; (8000884 <sbrk_aligned+0x3c>)
 800084c:	460c      	mov	r4, r1
 800084e:	6831      	ldr	r1, [r6, #0]
 8000850:	4605      	mov	r5, r0
 8000852:	b911      	cbnz	r1, 800085a <sbrk_aligned+0x12>
 8000854:	f000 fcb6 	bl	80011c4 <_sbrk_r>
 8000858:	6030      	str	r0, [r6, #0]
 800085a:	4621      	mov	r1, r4
 800085c:	4628      	mov	r0, r5
 800085e:	f000 fcb1 	bl	80011c4 <_sbrk_r>
 8000862:	1c43      	adds	r3, r0, #1
 8000864:	d00a      	beq.n	800087c <sbrk_aligned+0x34>
 8000866:	1cc4      	adds	r4, r0, #3
 8000868:	f024 0403 	bic.w	r4, r4, #3
 800086c:	42a0      	cmp	r0, r4
 800086e:	d007      	beq.n	8000880 <sbrk_aligned+0x38>
 8000870:	1a21      	subs	r1, r4, r0
 8000872:	4628      	mov	r0, r5
 8000874:	f000 fca6 	bl	80011c4 <_sbrk_r>
 8000878:	3001      	adds	r0, #1
 800087a:	d101      	bne.n	8000880 <sbrk_aligned+0x38>
 800087c:	f04f 34ff 	mov.w	r4, #4294967295
 8000880:	4620      	mov	r0, r4
 8000882:	bd70      	pop	{r4, r5, r6, pc}
 8000884:	200001d0 	.word	0x200001d0

08000888 <_malloc_r>:
 8000888:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800088c:	1ccd      	adds	r5, r1, #3
 800088e:	f025 0503 	bic.w	r5, r5, #3
 8000892:	3508      	adds	r5, #8
 8000894:	2d0c      	cmp	r5, #12
 8000896:	bf38      	it	cc
 8000898:	250c      	movcc	r5, #12
 800089a:	2d00      	cmp	r5, #0
 800089c:	4607      	mov	r7, r0
 800089e:	db01      	blt.n	80008a4 <_malloc_r+0x1c>
 80008a0:	42a9      	cmp	r1, r5
 80008a2:	d905      	bls.n	80008b0 <_malloc_r+0x28>
 80008a4:	230c      	movs	r3, #12
 80008a6:	603b      	str	r3, [r7, #0]
 80008a8:	2600      	movs	r6, #0
 80008aa:	4630      	mov	r0, r6
 80008ac:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80008b0:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8000984 <_malloc_r+0xfc>
 80008b4:	f000 f868 	bl	8000988 <__malloc_lock>
 80008b8:	f8d8 3000 	ldr.w	r3, [r8]
 80008bc:	461c      	mov	r4, r3
 80008be:	bb5c      	cbnz	r4, 8000918 <_malloc_r+0x90>
 80008c0:	4629      	mov	r1, r5
 80008c2:	4638      	mov	r0, r7
 80008c4:	f7ff ffc0 	bl	8000848 <sbrk_aligned>
 80008c8:	1c43      	adds	r3, r0, #1
 80008ca:	4604      	mov	r4, r0
 80008cc:	d155      	bne.n	800097a <_malloc_r+0xf2>
 80008ce:	f8d8 4000 	ldr.w	r4, [r8]
 80008d2:	4626      	mov	r6, r4
 80008d4:	2e00      	cmp	r6, #0
 80008d6:	d145      	bne.n	8000964 <_malloc_r+0xdc>
 80008d8:	2c00      	cmp	r4, #0
 80008da:	d048      	beq.n	800096e <_malloc_r+0xe6>
 80008dc:	6823      	ldr	r3, [r4, #0]
 80008de:	4631      	mov	r1, r6
 80008e0:	4638      	mov	r0, r7
 80008e2:	eb04 0903 	add.w	r9, r4, r3
 80008e6:	f000 fc6d 	bl	80011c4 <_sbrk_r>
 80008ea:	4581      	cmp	r9, r0
 80008ec:	d13f      	bne.n	800096e <_malloc_r+0xe6>
 80008ee:	6821      	ldr	r1, [r4, #0]
 80008f0:	1a6d      	subs	r5, r5, r1
 80008f2:	4629      	mov	r1, r5
 80008f4:	4638      	mov	r0, r7
 80008f6:	f7ff ffa7 	bl	8000848 <sbrk_aligned>
 80008fa:	3001      	adds	r0, #1
 80008fc:	d037      	beq.n	800096e <_malloc_r+0xe6>
 80008fe:	6823      	ldr	r3, [r4, #0]
 8000900:	442b      	add	r3, r5
 8000902:	6023      	str	r3, [r4, #0]
 8000904:	f8d8 3000 	ldr.w	r3, [r8]
 8000908:	2b00      	cmp	r3, #0
 800090a:	d038      	beq.n	800097e <_malloc_r+0xf6>
 800090c:	685a      	ldr	r2, [r3, #4]
 800090e:	42a2      	cmp	r2, r4
 8000910:	d12b      	bne.n	800096a <_malloc_r+0xe2>
 8000912:	2200      	movs	r2, #0
 8000914:	605a      	str	r2, [r3, #4]
 8000916:	e00f      	b.n	8000938 <_malloc_r+0xb0>
 8000918:	6822      	ldr	r2, [r4, #0]
 800091a:	1b52      	subs	r2, r2, r5
 800091c:	d41f      	bmi.n	800095e <_malloc_r+0xd6>
 800091e:	2a0b      	cmp	r2, #11
 8000920:	d917      	bls.n	8000952 <_malloc_r+0xca>
 8000922:	1961      	adds	r1, r4, r5
 8000924:	42a3      	cmp	r3, r4
 8000926:	6025      	str	r5, [r4, #0]
 8000928:	bf18      	it	ne
 800092a:	6059      	strne	r1, [r3, #4]
 800092c:	6863      	ldr	r3, [r4, #4]
 800092e:	bf08      	it	eq
 8000930:	f8c8 1000 	streq.w	r1, [r8]
 8000934:	5162      	str	r2, [r4, r5]
 8000936:	604b      	str	r3, [r1, #4]
 8000938:	4638      	mov	r0, r7
 800093a:	f104 060b 	add.w	r6, r4, #11
 800093e:	f000 f829 	bl	8000994 <__malloc_unlock>
 8000942:	f026 0607 	bic.w	r6, r6, #7
 8000946:	1d23      	adds	r3, r4, #4
 8000948:	1af2      	subs	r2, r6, r3
 800094a:	d0ae      	beq.n	80008aa <_malloc_r+0x22>
 800094c:	1b9b      	subs	r3, r3, r6
 800094e:	50a3      	str	r3, [r4, r2]
 8000950:	e7ab      	b.n	80008aa <_malloc_r+0x22>
 8000952:	42a3      	cmp	r3, r4
 8000954:	6862      	ldr	r2, [r4, #4]
 8000956:	d1dd      	bne.n	8000914 <_malloc_r+0x8c>
 8000958:	f8c8 2000 	str.w	r2, [r8]
 800095c:	e7ec      	b.n	8000938 <_malloc_r+0xb0>
 800095e:	4623      	mov	r3, r4
 8000960:	6864      	ldr	r4, [r4, #4]
 8000962:	e7ac      	b.n	80008be <_malloc_r+0x36>
 8000964:	4634      	mov	r4, r6
 8000966:	6876      	ldr	r6, [r6, #4]
 8000968:	e7b4      	b.n	80008d4 <_malloc_r+0x4c>
 800096a:	4613      	mov	r3, r2
 800096c:	e7cc      	b.n	8000908 <_malloc_r+0x80>
 800096e:	230c      	movs	r3, #12
 8000970:	603b      	str	r3, [r7, #0]
 8000972:	4638      	mov	r0, r7
 8000974:	f000 f80e 	bl	8000994 <__malloc_unlock>
 8000978:	e797      	b.n	80008aa <_malloc_r+0x22>
 800097a:	6025      	str	r5, [r4, #0]
 800097c:	e7dc      	b.n	8000938 <_malloc_r+0xb0>
 800097e:	605b      	str	r3, [r3, #4]
 8000980:	deff      	udf	#255	; 0xff
 8000982:	bf00      	nop
 8000984:	200001cc 	.word	0x200001cc

08000988 <__malloc_lock>:
 8000988:	4801      	ldr	r0, [pc, #4]	; (8000990 <__malloc_lock+0x8>)
 800098a:	f7ff bf10 	b.w	80007ae <__retarget_lock_acquire_recursive>
 800098e:	bf00      	nop
 8000990:	200001c8 	.word	0x200001c8

08000994 <__malloc_unlock>:
 8000994:	4801      	ldr	r0, [pc, #4]	; (800099c <__malloc_unlock+0x8>)
 8000996:	f7ff bf0b 	b.w	80007b0 <__retarget_lock_release_recursive>
 800099a:	bf00      	nop
 800099c:	200001c8 	.word	0x200001c8

080009a0 <__sfputc_r>:
 80009a0:	6893      	ldr	r3, [r2, #8]
 80009a2:	3b01      	subs	r3, #1
 80009a4:	2b00      	cmp	r3, #0
 80009a6:	b410      	push	{r4}
 80009a8:	6093      	str	r3, [r2, #8]
 80009aa:	da07      	bge.n	80009bc <__sfputc_r+0x1c>
 80009ac:	6994      	ldr	r4, [r2, #24]
 80009ae:	42a3      	cmp	r3, r4
 80009b0:	db01      	blt.n	80009b6 <__sfputc_r+0x16>
 80009b2:	290a      	cmp	r1, #10
 80009b4:	d102      	bne.n	80009bc <__sfputc_r+0x1c>
 80009b6:	bc10      	pop	{r4}
 80009b8:	f000 bb6e 	b.w	8001098 <__swbuf_r>
 80009bc:	6813      	ldr	r3, [r2, #0]
 80009be:	1c58      	adds	r0, r3, #1
 80009c0:	6010      	str	r0, [r2, #0]
 80009c2:	7019      	strb	r1, [r3, #0]
 80009c4:	4608      	mov	r0, r1
 80009c6:	bc10      	pop	{r4}
 80009c8:	4770      	bx	lr

080009ca <__sfputs_r>:
 80009ca:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009cc:	4606      	mov	r6, r0
 80009ce:	460f      	mov	r7, r1
 80009d0:	4614      	mov	r4, r2
 80009d2:	18d5      	adds	r5, r2, r3
 80009d4:	42ac      	cmp	r4, r5
 80009d6:	d101      	bne.n	80009dc <__sfputs_r+0x12>
 80009d8:	2000      	movs	r0, #0
 80009da:	e007      	b.n	80009ec <__sfputs_r+0x22>
 80009dc:	f814 1b01 	ldrb.w	r1, [r4], #1
 80009e0:	463a      	mov	r2, r7
 80009e2:	4630      	mov	r0, r6
 80009e4:	f7ff ffdc 	bl	80009a0 <__sfputc_r>
 80009e8:	1c43      	adds	r3, r0, #1
 80009ea:	d1f3      	bne.n	80009d4 <__sfputs_r+0xa>
 80009ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080009f0 <_vfiprintf_r>:
 80009f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80009f4:	460d      	mov	r5, r1
 80009f6:	b09d      	sub	sp, #116	; 0x74
 80009f8:	4614      	mov	r4, r2
 80009fa:	4698      	mov	r8, r3
 80009fc:	4606      	mov	r6, r0
 80009fe:	b118      	cbz	r0, 8000a08 <_vfiprintf_r+0x18>
 8000a00:	6a03      	ldr	r3, [r0, #32]
 8000a02:	b90b      	cbnz	r3, 8000a08 <_vfiprintf_r+0x18>
 8000a04:	f7ff fdce 	bl	80005a4 <__sinit>
 8000a08:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a0a:	07d9      	lsls	r1, r3, #31
 8000a0c:	d405      	bmi.n	8000a1a <_vfiprintf_r+0x2a>
 8000a0e:	89ab      	ldrh	r3, [r5, #12]
 8000a10:	059a      	lsls	r2, r3, #22
 8000a12:	d402      	bmi.n	8000a1a <_vfiprintf_r+0x2a>
 8000a14:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a16:	f7ff feca 	bl	80007ae <__retarget_lock_acquire_recursive>
 8000a1a:	89ab      	ldrh	r3, [r5, #12]
 8000a1c:	071b      	lsls	r3, r3, #28
 8000a1e:	d501      	bpl.n	8000a24 <_vfiprintf_r+0x34>
 8000a20:	692b      	ldr	r3, [r5, #16]
 8000a22:	b99b      	cbnz	r3, 8000a4c <_vfiprintf_r+0x5c>
 8000a24:	4629      	mov	r1, r5
 8000a26:	4630      	mov	r0, r6
 8000a28:	f000 fb74 	bl	8001114 <__swsetup_r>
 8000a2c:	b170      	cbz	r0, 8000a4c <_vfiprintf_r+0x5c>
 8000a2e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a30:	07dc      	lsls	r4, r3, #31
 8000a32:	d504      	bpl.n	8000a3e <_vfiprintf_r+0x4e>
 8000a34:	f04f 30ff 	mov.w	r0, #4294967295
 8000a38:	b01d      	add	sp, #116	; 0x74
 8000a3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000a3e:	89ab      	ldrh	r3, [r5, #12]
 8000a40:	0598      	lsls	r0, r3, #22
 8000a42:	d4f7      	bmi.n	8000a34 <_vfiprintf_r+0x44>
 8000a44:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a46:	f7ff feb3 	bl	80007b0 <__retarget_lock_release_recursive>
 8000a4a:	e7f3      	b.n	8000a34 <_vfiprintf_r+0x44>
 8000a4c:	2300      	movs	r3, #0
 8000a4e:	9309      	str	r3, [sp, #36]	; 0x24
 8000a50:	2320      	movs	r3, #32
 8000a52:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000a56:	f8cd 800c 	str.w	r8, [sp, #12]
 8000a5a:	2330      	movs	r3, #48	; 0x30
 8000a5c:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8000c10 <_vfiprintf_r+0x220>
 8000a60:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000a64:	f04f 0901 	mov.w	r9, #1
 8000a68:	4623      	mov	r3, r4
 8000a6a:	469a      	mov	sl, r3
 8000a6c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000a70:	b10a      	cbz	r2, 8000a76 <_vfiprintf_r+0x86>
 8000a72:	2a25      	cmp	r2, #37	; 0x25
 8000a74:	d1f9      	bne.n	8000a6a <_vfiprintf_r+0x7a>
 8000a76:	ebba 0b04 	subs.w	fp, sl, r4
 8000a7a:	d00b      	beq.n	8000a94 <_vfiprintf_r+0xa4>
 8000a7c:	465b      	mov	r3, fp
 8000a7e:	4622      	mov	r2, r4
 8000a80:	4629      	mov	r1, r5
 8000a82:	4630      	mov	r0, r6
 8000a84:	f7ff ffa1 	bl	80009ca <__sfputs_r>
 8000a88:	3001      	adds	r0, #1
 8000a8a:	f000 80a9 	beq.w	8000be0 <_vfiprintf_r+0x1f0>
 8000a8e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000a90:	445a      	add	r2, fp
 8000a92:	9209      	str	r2, [sp, #36]	; 0x24
 8000a94:	f89a 3000 	ldrb.w	r3, [sl]
 8000a98:	2b00      	cmp	r3, #0
 8000a9a:	f000 80a1 	beq.w	8000be0 <_vfiprintf_r+0x1f0>
 8000a9e:	2300      	movs	r3, #0
 8000aa0:	f04f 32ff 	mov.w	r2, #4294967295
 8000aa4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000aa8:	f10a 0a01 	add.w	sl, sl, #1
 8000aac:	9304      	str	r3, [sp, #16]
 8000aae:	9307      	str	r3, [sp, #28]
 8000ab0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000ab4:	931a      	str	r3, [sp, #104]	; 0x68
 8000ab6:	4654      	mov	r4, sl
 8000ab8:	2205      	movs	r2, #5
 8000aba:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000abe:	4854      	ldr	r0, [pc, #336]	; (8000c10 <_vfiprintf_r+0x220>)
 8000ac0:	f7ff fb86 	bl	80001d0 <memchr>
 8000ac4:	9a04      	ldr	r2, [sp, #16]
 8000ac6:	b9d8      	cbnz	r0, 8000b00 <_vfiprintf_r+0x110>
 8000ac8:	06d1      	lsls	r1, r2, #27
 8000aca:	bf44      	itt	mi
 8000acc:	2320      	movmi	r3, #32
 8000ace:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000ad2:	0713      	lsls	r3, r2, #28
 8000ad4:	bf44      	itt	mi
 8000ad6:	232b      	movmi	r3, #43	; 0x2b
 8000ad8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000adc:	f89a 3000 	ldrb.w	r3, [sl]
 8000ae0:	2b2a      	cmp	r3, #42	; 0x2a
 8000ae2:	d015      	beq.n	8000b10 <_vfiprintf_r+0x120>
 8000ae4:	9a07      	ldr	r2, [sp, #28]
 8000ae6:	4654      	mov	r4, sl
 8000ae8:	2000      	movs	r0, #0
 8000aea:	f04f 0c0a 	mov.w	ip, #10
 8000aee:	4621      	mov	r1, r4
 8000af0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000af4:	3b30      	subs	r3, #48	; 0x30
 8000af6:	2b09      	cmp	r3, #9
 8000af8:	d94d      	bls.n	8000b96 <_vfiprintf_r+0x1a6>
 8000afa:	b1b0      	cbz	r0, 8000b2a <_vfiprintf_r+0x13a>
 8000afc:	9207      	str	r2, [sp, #28]
 8000afe:	e014      	b.n	8000b2a <_vfiprintf_r+0x13a>
 8000b00:	eba0 0308 	sub.w	r3, r0, r8
 8000b04:	fa09 f303 	lsl.w	r3, r9, r3
 8000b08:	4313      	orrs	r3, r2
 8000b0a:	9304      	str	r3, [sp, #16]
 8000b0c:	46a2      	mov	sl, r4
 8000b0e:	e7d2      	b.n	8000ab6 <_vfiprintf_r+0xc6>
 8000b10:	9b03      	ldr	r3, [sp, #12]
 8000b12:	1d19      	adds	r1, r3, #4
 8000b14:	681b      	ldr	r3, [r3, #0]
 8000b16:	9103      	str	r1, [sp, #12]
 8000b18:	2b00      	cmp	r3, #0
 8000b1a:	bfbb      	ittet	lt
 8000b1c:	425b      	neglt	r3, r3
 8000b1e:	f042 0202 	orrlt.w	r2, r2, #2
 8000b22:	9307      	strge	r3, [sp, #28]
 8000b24:	9307      	strlt	r3, [sp, #28]
 8000b26:	bfb8      	it	lt
 8000b28:	9204      	strlt	r2, [sp, #16]
 8000b2a:	7823      	ldrb	r3, [r4, #0]
 8000b2c:	2b2e      	cmp	r3, #46	; 0x2e
 8000b2e:	d10c      	bne.n	8000b4a <_vfiprintf_r+0x15a>
 8000b30:	7863      	ldrb	r3, [r4, #1]
 8000b32:	2b2a      	cmp	r3, #42	; 0x2a
 8000b34:	d134      	bne.n	8000ba0 <_vfiprintf_r+0x1b0>
 8000b36:	9b03      	ldr	r3, [sp, #12]
 8000b38:	1d1a      	adds	r2, r3, #4
 8000b3a:	681b      	ldr	r3, [r3, #0]
 8000b3c:	9203      	str	r2, [sp, #12]
 8000b3e:	2b00      	cmp	r3, #0
 8000b40:	bfb8      	it	lt
 8000b42:	f04f 33ff 	movlt.w	r3, #4294967295
 8000b46:	3402      	adds	r4, #2
 8000b48:	9305      	str	r3, [sp, #20]
 8000b4a:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8000c14 <_vfiprintf_r+0x224>
 8000b4e:	7821      	ldrb	r1, [r4, #0]
 8000b50:	2203      	movs	r2, #3
 8000b52:	4650      	mov	r0, sl
 8000b54:	f7ff fb3c 	bl	80001d0 <memchr>
 8000b58:	b138      	cbz	r0, 8000b6a <_vfiprintf_r+0x17a>
 8000b5a:	9b04      	ldr	r3, [sp, #16]
 8000b5c:	eba0 000a 	sub.w	r0, r0, sl
 8000b60:	2240      	movs	r2, #64	; 0x40
 8000b62:	4082      	lsls	r2, r0
 8000b64:	4313      	orrs	r3, r2
 8000b66:	3401      	adds	r4, #1
 8000b68:	9304      	str	r3, [sp, #16]
 8000b6a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b6e:	482a      	ldr	r0, [pc, #168]	; (8000c18 <_vfiprintf_r+0x228>)
 8000b70:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000b74:	2206      	movs	r2, #6
 8000b76:	f7ff fb2b 	bl	80001d0 <memchr>
 8000b7a:	2800      	cmp	r0, #0
 8000b7c:	d03f      	beq.n	8000bfe <_vfiprintf_r+0x20e>
 8000b7e:	4b27      	ldr	r3, [pc, #156]	; (8000c1c <_vfiprintf_r+0x22c>)
 8000b80:	bb1b      	cbnz	r3, 8000bca <_vfiprintf_r+0x1da>
 8000b82:	9b03      	ldr	r3, [sp, #12]
 8000b84:	3307      	adds	r3, #7
 8000b86:	f023 0307 	bic.w	r3, r3, #7
 8000b8a:	3308      	adds	r3, #8
 8000b8c:	9303      	str	r3, [sp, #12]
 8000b8e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000b90:	443b      	add	r3, r7
 8000b92:	9309      	str	r3, [sp, #36]	; 0x24
 8000b94:	e768      	b.n	8000a68 <_vfiprintf_r+0x78>
 8000b96:	fb0c 3202 	mla	r2, ip, r2, r3
 8000b9a:	460c      	mov	r4, r1
 8000b9c:	2001      	movs	r0, #1
 8000b9e:	e7a6      	b.n	8000aee <_vfiprintf_r+0xfe>
 8000ba0:	2300      	movs	r3, #0
 8000ba2:	3401      	adds	r4, #1
 8000ba4:	9305      	str	r3, [sp, #20]
 8000ba6:	4619      	mov	r1, r3
 8000ba8:	f04f 0c0a 	mov.w	ip, #10
 8000bac:	4620      	mov	r0, r4
 8000bae:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000bb2:	3a30      	subs	r2, #48	; 0x30
 8000bb4:	2a09      	cmp	r2, #9
 8000bb6:	d903      	bls.n	8000bc0 <_vfiprintf_r+0x1d0>
 8000bb8:	2b00      	cmp	r3, #0
 8000bba:	d0c6      	beq.n	8000b4a <_vfiprintf_r+0x15a>
 8000bbc:	9105      	str	r1, [sp, #20]
 8000bbe:	e7c4      	b.n	8000b4a <_vfiprintf_r+0x15a>
 8000bc0:	fb0c 2101 	mla	r1, ip, r1, r2
 8000bc4:	4604      	mov	r4, r0
 8000bc6:	2301      	movs	r3, #1
 8000bc8:	e7f0      	b.n	8000bac <_vfiprintf_r+0x1bc>
 8000bca:	ab03      	add	r3, sp, #12
 8000bcc:	9300      	str	r3, [sp, #0]
 8000bce:	462a      	mov	r2, r5
 8000bd0:	4b13      	ldr	r3, [pc, #76]	; (8000c20 <_vfiprintf_r+0x230>)
 8000bd2:	a904      	add	r1, sp, #16
 8000bd4:	4630      	mov	r0, r6
 8000bd6:	f3af 8000 	nop.w
 8000bda:	4607      	mov	r7, r0
 8000bdc:	1c78      	adds	r0, r7, #1
 8000bde:	d1d6      	bne.n	8000b8e <_vfiprintf_r+0x19e>
 8000be0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000be2:	07d9      	lsls	r1, r3, #31
 8000be4:	d405      	bmi.n	8000bf2 <_vfiprintf_r+0x202>
 8000be6:	89ab      	ldrh	r3, [r5, #12]
 8000be8:	059a      	lsls	r2, r3, #22
 8000bea:	d402      	bmi.n	8000bf2 <_vfiprintf_r+0x202>
 8000bec:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000bee:	f7ff fddf 	bl	80007b0 <__retarget_lock_release_recursive>
 8000bf2:	89ab      	ldrh	r3, [r5, #12]
 8000bf4:	065b      	lsls	r3, r3, #25
 8000bf6:	f53f af1d 	bmi.w	8000a34 <_vfiprintf_r+0x44>
 8000bfa:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000bfc:	e71c      	b.n	8000a38 <_vfiprintf_r+0x48>
 8000bfe:	ab03      	add	r3, sp, #12
 8000c00:	9300      	str	r3, [sp, #0]
 8000c02:	462a      	mov	r2, r5
 8000c04:	4b06      	ldr	r3, [pc, #24]	; (8000c20 <_vfiprintf_r+0x230>)
 8000c06:	a904      	add	r1, sp, #16
 8000c08:	4630      	mov	r0, r6
 8000c0a:	f000 f879 	bl	8000d00 <_printf_i>
 8000c0e:	e7e4      	b.n	8000bda <_vfiprintf_r+0x1ea>
 8000c10:	0800132e 	.word	0x0800132e
 8000c14:	08001334 	.word	0x08001334
 8000c18:	08001338 	.word	0x08001338
 8000c1c:	00000000 	.word	0x00000000
 8000c20:	080009cb 	.word	0x080009cb

08000c24 <_printf_common>:
 8000c24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c28:	4616      	mov	r6, r2
 8000c2a:	4699      	mov	r9, r3
 8000c2c:	688a      	ldr	r2, [r1, #8]
 8000c2e:	690b      	ldr	r3, [r1, #16]
 8000c30:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000c34:	4293      	cmp	r3, r2
 8000c36:	bfb8      	it	lt
 8000c38:	4613      	movlt	r3, r2
 8000c3a:	6033      	str	r3, [r6, #0]
 8000c3c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000c40:	4607      	mov	r7, r0
 8000c42:	460c      	mov	r4, r1
 8000c44:	b10a      	cbz	r2, 8000c4a <_printf_common+0x26>
 8000c46:	3301      	adds	r3, #1
 8000c48:	6033      	str	r3, [r6, #0]
 8000c4a:	6823      	ldr	r3, [r4, #0]
 8000c4c:	0699      	lsls	r1, r3, #26
 8000c4e:	bf42      	ittt	mi
 8000c50:	6833      	ldrmi	r3, [r6, #0]
 8000c52:	3302      	addmi	r3, #2
 8000c54:	6033      	strmi	r3, [r6, #0]
 8000c56:	6825      	ldr	r5, [r4, #0]
 8000c58:	f015 0506 	ands.w	r5, r5, #6
 8000c5c:	d106      	bne.n	8000c6c <_printf_common+0x48>
 8000c5e:	f104 0a19 	add.w	sl, r4, #25
 8000c62:	68e3      	ldr	r3, [r4, #12]
 8000c64:	6832      	ldr	r2, [r6, #0]
 8000c66:	1a9b      	subs	r3, r3, r2
 8000c68:	42ab      	cmp	r3, r5
 8000c6a:	dc26      	bgt.n	8000cba <_printf_common+0x96>
 8000c6c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000c70:	1e13      	subs	r3, r2, #0
 8000c72:	6822      	ldr	r2, [r4, #0]
 8000c74:	bf18      	it	ne
 8000c76:	2301      	movne	r3, #1
 8000c78:	0692      	lsls	r2, r2, #26
 8000c7a:	d42b      	bmi.n	8000cd4 <_printf_common+0xb0>
 8000c7c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000c80:	4649      	mov	r1, r9
 8000c82:	4638      	mov	r0, r7
 8000c84:	47c0      	blx	r8
 8000c86:	3001      	adds	r0, #1
 8000c88:	d01e      	beq.n	8000cc8 <_printf_common+0xa4>
 8000c8a:	6823      	ldr	r3, [r4, #0]
 8000c8c:	6922      	ldr	r2, [r4, #16]
 8000c8e:	f003 0306 	and.w	r3, r3, #6
 8000c92:	2b04      	cmp	r3, #4
 8000c94:	bf02      	ittt	eq
 8000c96:	68e5      	ldreq	r5, [r4, #12]
 8000c98:	6833      	ldreq	r3, [r6, #0]
 8000c9a:	1aed      	subeq	r5, r5, r3
 8000c9c:	68a3      	ldr	r3, [r4, #8]
 8000c9e:	bf0c      	ite	eq
 8000ca0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000ca4:	2500      	movne	r5, #0
 8000ca6:	4293      	cmp	r3, r2
 8000ca8:	bfc4      	itt	gt
 8000caa:	1a9b      	subgt	r3, r3, r2
 8000cac:	18ed      	addgt	r5, r5, r3
 8000cae:	2600      	movs	r6, #0
 8000cb0:	341a      	adds	r4, #26
 8000cb2:	42b5      	cmp	r5, r6
 8000cb4:	d11a      	bne.n	8000cec <_printf_common+0xc8>
 8000cb6:	2000      	movs	r0, #0
 8000cb8:	e008      	b.n	8000ccc <_printf_common+0xa8>
 8000cba:	2301      	movs	r3, #1
 8000cbc:	4652      	mov	r2, sl
 8000cbe:	4649      	mov	r1, r9
 8000cc0:	4638      	mov	r0, r7
 8000cc2:	47c0      	blx	r8
 8000cc4:	3001      	adds	r0, #1
 8000cc6:	d103      	bne.n	8000cd0 <_printf_common+0xac>
 8000cc8:	f04f 30ff 	mov.w	r0, #4294967295
 8000ccc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cd0:	3501      	adds	r5, #1
 8000cd2:	e7c6      	b.n	8000c62 <_printf_common+0x3e>
 8000cd4:	18e1      	adds	r1, r4, r3
 8000cd6:	1c5a      	adds	r2, r3, #1
 8000cd8:	2030      	movs	r0, #48	; 0x30
 8000cda:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000cde:	4422      	add	r2, r4
 8000ce0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000ce4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000ce8:	3302      	adds	r3, #2
 8000cea:	e7c7      	b.n	8000c7c <_printf_common+0x58>
 8000cec:	2301      	movs	r3, #1
 8000cee:	4622      	mov	r2, r4
 8000cf0:	4649      	mov	r1, r9
 8000cf2:	4638      	mov	r0, r7
 8000cf4:	47c0      	blx	r8
 8000cf6:	3001      	adds	r0, #1
 8000cf8:	d0e6      	beq.n	8000cc8 <_printf_common+0xa4>
 8000cfa:	3601      	adds	r6, #1
 8000cfc:	e7d9      	b.n	8000cb2 <_printf_common+0x8e>
	...

08000d00 <_printf_i>:
 8000d00:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000d04:	7e0f      	ldrb	r7, [r1, #24]
 8000d06:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000d08:	2f78      	cmp	r7, #120	; 0x78
 8000d0a:	4691      	mov	r9, r2
 8000d0c:	4680      	mov	r8, r0
 8000d0e:	460c      	mov	r4, r1
 8000d10:	469a      	mov	sl, r3
 8000d12:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000d16:	d807      	bhi.n	8000d28 <_printf_i+0x28>
 8000d18:	2f62      	cmp	r7, #98	; 0x62
 8000d1a:	d80a      	bhi.n	8000d32 <_printf_i+0x32>
 8000d1c:	2f00      	cmp	r7, #0
 8000d1e:	f000 80d4 	beq.w	8000eca <_printf_i+0x1ca>
 8000d22:	2f58      	cmp	r7, #88	; 0x58
 8000d24:	f000 80c0 	beq.w	8000ea8 <_printf_i+0x1a8>
 8000d28:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000d2c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000d30:	e03a      	b.n	8000da8 <_printf_i+0xa8>
 8000d32:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000d36:	2b15      	cmp	r3, #21
 8000d38:	d8f6      	bhi.n	8000d28 <_printf_i+0x28>
 8000d3a:	a101      	add	r1, pc, #4	; (adr r1, 8000d40 <_printf_i+0x40>)
 8000d3c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000d40:	08000d99 	.word	0x08000d99
 8000d44:	08000dad 	.word	0x08000dad
 8000d48:	08000d29 	.word	0x08000d29
 8000d4c:	08000d29 	.word	0x08000d29
 8000d50:	08000d29 	.word	0x08000d29
 8000d54:	08000d29 	.word	0x08000d29
 8000d58:	08000dad 	.word	0x08000dad
 8000d5c:	08000d29 	.word	0x08000d29
 8000d60:	08000d29 	.word	0x08000d29
 8000d64:	08000d29 	.word	0x08000d29
 8000d68:	08000d29 	.word	0x08000d29
 8000d6c:	08000eb1 	.word	0x08000eb1
 8000d70:	08000dd9 	.word	0x08000dd9
 8000d74:	08000e6b 	.word	0x08000e6b
 8000d78:	08000d29 	.word	0x08000d29
 8000d7c:	08000d29 	.word	0x08000d29
 8000d80:	08000ed3 	.word	0x08000ed3
 8000d84:	08000d29 	.word	0x08000d29
 8000d88:	08000dd9 	.word	0x08000dd9
 8000d8c:	08000d29 	.word	0x08000d29
 8000d90:	08000d29 	.word	0x08000d29
 8000d94:	08000e73 	.word	0x08000e73
 8000d98:	682b      	ldr	r3, [r5, #0]
 8000d9a:	1d1a      	adds	r2, r3, #4
 8000d9c:	681b      	ldr	r3, [r3, #0]
 8000d9e:	602a      	str	r2, [r5, #0]
 8000da0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000da4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000da8:	2301      	movs	r3, #1
 8000daa:	e09f      	b.n	8000eec <_printf_i+0x1ec>
 8000dac:	6820      	ldr	r0, [r4, #0]
 8000dae:	682b      	ldr	r3, [r5, #0]
 8000db0:	0607      	lsls	r7, r0, #24
 8000db2:	f103 0104 	add.w	r1, r3, #4
 8000db6:	6029      	str	r1, [r5, #0]
 8000db8:	d501      	bpl.n	8000dbe <_printf_i+0xbe>
 8000dba:	681e      	ldr	r6, [r3, #0]
 8000dbc:	e003      	b.n	8000dc6 <_printf_i+0xc6>
 8000dbe:	0646      	lsls	r6, r0, #25
 8000dc0:	d5fb      	bpl.n	8000dba <_printf_i+0xba>
 8000dc2:	f9b3 6000 	ldrsh.w	r6, [r3]
 8000dc6:	2e00      	cmp	r6, #0
 8000dc8:	da03      	bge.n	8000dd2 <_printf_i+0xd2>
 8000dca:	232d      	movs	r3, #45	; 0x2d
 8000dcc:	4276      	negs	r6, r6
 8000dce:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000dd2:	485a      	ldr	r0, [pc, #360]	; (8000f3c <_printf_i+0x23c>)
 8000dd4:	230a      	movs	r3, #10
 8000dd6:	e012      	b.n	8000dfe <_printf_i+0xfe>
 8000dd8:	682b      	ldr	r3, [r5, #0]
 8000dda:	6820      	ldr	r0, [r4, #0]
 8000ddc:	1d19      	adds	r1, r3, #4
 8000dde:	6029      	str	r1, [r5, #0]
 8000de0:	0605      	lsls	r5, r0, #24
 8000de2:	d501      	bpl.n	8000de8 <_printf_i+0xe8>
 8000de4:	681e      	ldr	r6, [r3, #0]
 8000de6:	e002      	b.n	8000dee <_printf_i+0xee>
 8000de8:	0641      	lsls	r1, r0, #25
 8000dea:	d5fb      	bpl.n	8000de4 <_printf_i+0xe4>
 8000dec:	881e      	ldrh	r6, [r3, #0]
 8000dee:	4853      	ldr	r0, [pc, #332]	; (8000f3c <_printf_i+0x23c>)
 8000df0:	2f6f      	cmp	r7, #111	; 0x6f
 8000df2:	bf0c      	ite	eq
 8000df4:	2308      	moveq	r3, #8
 8000df6:	230a      	movne	r3, #10
 8000df8:	2100      	movs	r1, #0
 8000dfa:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000dfe:	6865      	ldr	r5, [r4, #4]
 8000e00:	60a5      	str	r5, [r4, #8]
 8000e02:	2d00      	cmp	r5, #0
 8000e04:	bfa2      	ittt	ge
 8000e06:	6821      	ldrge	r1, [r4, #0]
 8000e08:	f021 0104 	bicge.w	r1, r1, #4
 8000e0c:	6021      	strge	r1, [r4, #0]
 8000e0e:	b90e      	cbnz	r6, 8000e14 <_printf_i+0x114>
 8000e10:	2d00      	cmp	r5, #0
 8000e12:	d04b      	beq.n	8000eac <_printf_i+0x1ac>
 8000e14:	4615      	mov	r5, r2
 8000e16:	fbb6 f1f3 	udiv	r1, r6, r3
 8000e1a:	fb03 6711 	mls	r7, r3, r1, r6
 8000e1e:	5dc7      	ldrb	r7, [r0, r7]
 8000e20:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000e24:	4637      	mov	r7, r6
 8000e26:	42bb      	cmp	r3, r7
 8000e28:	460e      	mov	r6, r1
 8000e2a:	d9f4      	bls.n	8000e16 <_printf_i+0x116>
 8000e2c:	2b08      	cmp	r3, #8
 8000e2e:	d10b      	bne.n	8000e48 <_printf_i+0x148>
 8000e30:	6823      	ldr	r3, [r4, #0]
 8000e32:	07de      	lsls	r6, r3, #31
 8000e34:	d508      	bpl.n	8000e48 <_printf_i+0x148>
 8000e36:	6923      	ldr	r3, [r4, #16]
 8000e38:	6861      	ldr	r1, [r4, #4]
 8000e3a:	4299      	cmp	r1, r3
 8000e3c:	bfde      	ittt	le
 8000e3e:	2330      	movle	r3, #48	; 0x30
 8000e40:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000e44:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000e48:	1b52      	subs	r2, r2, r5
 8000e4a:	6122      	str	r2, [r4, #16]
 8000e4c:	f8cd a000 	str.w	sl, [sp]
 8000e50:	464b      	mov	r3, r9
 8000e52:	aa03      	add	r2, sp, #12
 8000e54:	4621      	mov	r1, r4
 8000e56:	4640      	mov	r0, r8
 8000e58:	f7ff fee4 	bl	8000c24 <_printf_common>
 8000e5c:	3001      	adds	r0, #1
 8000e5e:	d14a      	bne.n	8000ef6 <_printf_i+0x1f6>
 8000e60:	f04f 30ff 	mov.w	r0, #4294967295
 8000e64:	b004      	add	sp, #16
 8000e66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e6a:	6823      	ldr	r3, [r4, #0]
 8000e6c:	f043 0320 	orr.w	r3, r3, #32
 8000e70:	6023      	str	r3, [r4, #0]
 8000e72:	4833      	ldr	r0, [pc, #204]	; (8000f40 <_printf_i+0x240>)
 8000e74:	2778      	movs	r7, #120	; 0x78
 8000e76:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000e7a:	6823      	ldr	r3, [r4, #0]
 8000e7c:	6829      	ldr	r1, [r5, #0]
 8000e7e:	061f      	lsls	r7, r3, #24
 8000e80:	f851 6b04 	ldr.w	r6, [r1], #4
 8000e84:	d402      	bmi.n	8000e8c <_printf_i+0x18c>
 8000e86:	065f      	lsls	r7, r3, #25
 8000e88:	bf48      	it	mi
 8000e8a:	b2b6      	uxthmi	r6, r6
 8000e8c:	07df      	lsls	r7, r3, #31
 8000e8e:	bf48      	it	mi
 8000e90:	f043 0320 	orrmi.w	r3, r3, #32
 8000e94:	6029      	str	r1, [r5, #0]
 8000e96:	bf48      	it	mi
 8000e98:	6023      	strmi	r3, [r4, #0]
 8000e9a:	b91e      	cbnz	r6, 8000ea4 <_printf_i+0x1a4>
 8000e9c:	6823      	ldr	r3, [r4, #0]
 8000e9e:	f023 0320 	bic.w	r3, r3, #32
 8000ea2:	6023      	str	r3, [r4, #0]
 8000ea4:	2310      	movs	r3, #16
 8000ea6:	e7a7      	b.n	8000df8 <_printf_i+0xf8>
 8000ea8:	4824      	ldr	r0, [pc, #144]	; (8000f3c <_printf_i+0x23c>)
 8000eaa:	e7e4      	b.n	8000e76 <_printf_i+0x176>
 8000eac:	4615      	mov	r5, r2
 8000eae:	e7bd      	b.n	8000e2c <_printf_i+0x12c>
 8000eb0:	682b      	ldr	r3, [r5, #0]
 8000eb2:	6826      	ldr	r6, [r4, #0]
 8000eb4:	6961      	ldr	r1, [r4, #20]
 8000eb6:	1d18      	adds	r0, r3, #4
 8000eb8:	6028      	str	r0, [r5, #0]
 8000eba:	0635      	lsls	r5, r6, #24
 8000ebc:	681b      	ldr	r3, [r3, #0]
 8000ebe:	d501      	bpl.n	8000ec4 <_printf_i+0x1c4>
 8000ec0:	6019      	str	r1, [r3, #0]
 8000ec2:	e002      	b.n	8000eca <_printf_i+0x1ca>
 8000ec4:	0670      	lsls	r0, r6, #25
 8000ec6:	d5fb      	bpl.n	8000ec0 <_printf_i+0x1c0>
 8000ec8:	8019      	strh	r1, [r3, #0]
 8000eca:	2300      	movs	r3, #0
 8000ecc:	6123      	str	r3, [r4, #16]
 8000ece:	4615      	mov	r5, r2
 8000ed0:	e7bc      	b.n	8000e4c <_printf_i+0x14c>
 8000ed2:	682b      	ldr	r3, [r5, #0]
 8000ed4:	1d1a      	adds	r2, r3, #4
 8000ed6:	602a      	str	r2, [r5, #0]
 8000ed8:	681d      	ldr	r5, [r3, #0]
 8000eda:	6862      	ldr	r2, [r4, #4]
 8000edc:	2100      	movs	r1, #0
 8000ede:	4628      	mov	r0, r5
 8000ee0:	f7ff f976 	bl	80001d0 <memchr>
 8000ee4:	b108      	cbz	r0, 8000eea <_printf_i+0x1ea>
 8000ee6:	1b40      	subs	r0, r0, r5
 8000ee8:	6060      	str	r0, [r4, #4]
 8000eea:	6863      	ldr	r3, [r4, #4]
 8000eec:	6123      	str	r3, [r4, #16]
 8000eee:	2300      	movs	r3, #0
 8000ef0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000ef4:	e7aa      	b.n	8000e4c <_printf_i+0x14c>
 8000ef6:	6923      	ldr	r3, [r4, #16]
 8000ef8:	462a      	mov	r2, r5
 8000efa:	4649      	mov	r1, r9
 8000efc:	4640      	mov	r0, r8
 8000efe:	47d0      	blx	sl
 8000f00:	3001      	adds	r0, #1
 8000f02:	d0ad      	beq.n	8000e60 <_printf_i+0x160>
 8000f04:	6823      	ldr	r3, [r4, #0]
 8000f06:	079b      	lsls	r3, r3, #30
 8000f08:	d413      	bmi.n	8000f32 <_printf_i+0x232>
 8000f0a:	68e0      	ldr	r0, [r4, #12]
 8000f0c:	9b03      	ldr	r3, [sp, #12]
 8000f0e:	4298      	cmp	r0, r3
 8000f10:	bfb8      	it	lt
 8000f12:	4618      	movlt	r0, r3
 8000f14:	e7a6      	b.n	8000e64 <_printf_i+0x164>
 8000f16:	2301      	movs	r3, #1
 8000f18:	4632      	mov	r2, r6
 8000f1a:	4649      	mov	r1, r9
 8000f1c:	4640      	mov	r0, r8
 8000f1e:	47d0      	blx	sl
 8000f20:	3001      	adds	r0, #1
 8000f22:	d09d      	beq.n	8000e60 <_printf_i+0x160>
 8000f24:	3501      	adds	r5, #1
 8000f26:	68e3      	ldr	r3, [r4, #12]
 8000f28:	9903      	ldr	r1, [sp, #12]
 8000f2a:	1a5b      	subs	r3, r3, r1
 8000f2c:	42ab      	cmp	r3, r5
 8000f2e:	dcf2      	bgt.n	8000f16 <_printf_i+0x216>
 8000f30:	e7eb      	b.n	8000f0a <_printf_i+0x20a>
 8000f32:	2500      	movs	r5, #0
 8000f34:	f104 0619 	add.w	r6, r4, #25
 8000f38:	e7f5      	b.n	8000f26 <_printf_i+0x226>
 8000f3a:	bf00      	nop
 8000f3c:	0800133f 	.word	0x0800133f
 8000f40:	08001350 	.word	0x08001350

08000f44 <__sflush_r>:
 8000f44:	898a      	ldrh	r2, [r1, #12]
 8000f46:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f48:	4605      	mov	r5, r0
 8000f4a:	0710      	lsls	r0, r2, #28
 8000f4c:	460c      	mov	r4, r1
 8000f4e:	d457      	bmi.n	8001000 <__sflush_r+0xbc>
 8000f50:	684b      	ldr	r3, [r1, #4]
 8000f52:	2b00      	cmp	r3, #0
 8000f54:	dc04      	bgt.n	8000f60 <__sflush_r+0x1c>
 8000f56:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000f58:	2b00      	cmp	r3, #0
 8000f5a:	dc01      	bgt.n	8000f60 <__sflush_r+0x1c>
 8000f5c:	2000      	movs	r0, #0
 8000f5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000f60:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000f62:	2e00      	cmp	r6, #0
 8000f64:	d0fa      	beq.n	8000f5c <__sflush_r+0x18>
 8000f66:	2300      	movs	r3, #0
 8000f68:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000f6c:	682f      	ldr	r7, [r5, #0]
 8000f6e:	6a21      	ldr	r1, [r4, #32]
 8000f70:	602b      	str	r3, [r5, #0]
 8000f72:	d032      	beq.n	8000fda <__sflush_r+0x96>
 8000f74:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000f76:	89a3      	ldrh	r3, [r4, #12]
 8000f78:	075a      	lsls	r2, r3, #29
 8000f7a:	d505      	bpl.n	8000f88 <__sflush_r+0x44>
 8000f7c:	6863      	ldr	r3, [r4, #4]
 8000f7e:	1ac0      	subs	r0, r0, r3
 8000f80:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000f82:	b10b      	cbz	r3, 8000f88 <__sflush_r+0x44>
 8000f84:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000f86:	1ac0      	subs	r0, r0, r3
 8000f88:	2300      	movs	r3, #0
 8000f8a:	4602      	mov	r2, r0
 8000f8c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000f8e:	6a21      	ldr	r1, [r4, #32]
 8000f90:	4628      	mov	r0, r5
 8000f92:	47b0      	blx	r6
 8000f94:	1c43      	adds	r3, r0, #1
 8000f96:	89a3      	ldrh	r3, [r4, #12]
 8000f98:	d106      	bne.n	8000fa8 <__sflush_r+0x64>
 8000f9a:	6829      	ldr	r1, [r5, #0]
 8000f9c:	291d      	cmp	r1, #29
 8000f9e:	d82b      	bhi.n	8000ff8 <__sflush_r+0xb4>
 8000fa0:	4a28      	ldr	r2, [pc, #160]	; (8001044 <__sflush_r+0x100>)
 8000fa2:	410a      	asrs	r2, r1
 8000fa4:	07d6      	lsls	r6, r2, #31
 8000fa6:	d427      	bmi.n	8000ff8 <__sflush_r+0xb4>
 8000fa8:	2200      	movs	r2, #0
 8000faa:	6062      	str	r2, [r4, #4]
 8000fac:	04d9      	lsls	r1, r3, #19
 8000fae:	6922      	ldr	r2, [r4, #16]
 8000fb0:	6022      	str	r2, [r4, #0]
 8000fb2:	d504      	bpl.n	8000fbe <__sflush_r+0x7a>
 8000fb4:	1c42      	adds	r2, r0, #1
 8000fb6:	d101      	bne.n	8000fbc <__sflush_r+0x78>
 8000fb8:	682b      	ldr	r3, [r5, #0]
 8000fba:	b903      	cbnz	r3, 8000fbe <__sflush_r+0x7a>
 8000fbc:	6560      	str	r0, [r4, #84]	; 0x54
 8000fbe:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000fc0:	602f      	str	r7, [r5, #0]
 8000fc2:	2900      	cmp	r1, #0
 8000fc4:	d0ca      	beq.n	8000f5c <__sflush_r+0x18>
 8000fc6:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000fca:	4299      	cmp	r1, r3
 8000fcc:	d002      	beq.n	8000fd4 <__sflush_r+0x90>
 8000fce:	4628      	mov	r0, r5
 8000fd0:	f7ff fbf0 	bl	80007b4 <_free_r>
 8000fd4:	2000      	movs	r0, #0
 8000fd6:	6360      	str	r0, [r4, #52]	; 0x34
 8000fd8:	e7c1      	b.n	8000f5e <__sflush_r+0x1a>
 8000fda:	2301      	movs	r3, #1
 8000fdc:	4628      	mov	r0, r5
 8000fde:	47b0      	blx	r6
 8000fe0:	1c41      	adds	r1, r0, #1
 8000fe2:	d1c8      	bne.n	8000f76 <__sflush_r+0x32>
 8000fe4:	682b      	ldr	r3, [r5, #0]
 8000fe6:	2b00      	cmp	r3, #0
 8000fe8:	d0c5      	beq.n	8000f76 <__sflush_r+0x32>
 8000fea:	2b1d      	cmp	r3, #29
 8000fec:	d001      	beq.n	8000ff2 <__sflush_r+0xae>
 8000fee:	2b16      	cmp	r3, #22
 8000ff0:	d101      	bne.n	8000ff6 <__sflush_r+0xb2>
 8000ff2:	602f      	str	r7, [r5, #0]
 8000ff4:	e7b2      	b.n	8000f5c <__sflush_r+0x18>
 8000ff6:	89a3      	ldrh	r3, [r4, #12]
 8000ff8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000ffc:	81a3      	strh	r3, [r4, #12]
 8000ffe:	e7ae      	b.n	8000f5e <__sflush_r+0x1a>
 8001000:	690f      	ldr	r7, [r1, #16]
 8001002:	2f00      	cmp	r7, #0
 8001004:	d0aa      	beq.n	8000f5c <__sflush_r+0x18>
 8001006:	0793      	lsls	r3, r2, #30
 8001008:	680e      	ldr	r6, [r1, #0]
 800100a:	bf08      	it	eq
 800100c:	694b      	ldreq	r3, [r1, #20]
 800100e:	600f      	str	r7, [r1, #0]
 8001010:	bf18      	it	ne
 8001012:	2300      	movne	r3, #0
 8001014:	1bf6      	subs	r6, r6, r7
 8001016:	608b      	str	r3, [r1, #8]
 8001018:	2e00      	cmp	r6, #0
 800101a:	dd9f      	ble.n	8000f5c <__sflush_r+0x18>
 800101c:	6a21      	ldr	r1, [r4, #32]
 800101e:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8001022:	4633      	mov	r3, r6
 8001024:	463a      	mov	r2, r7
 8001026:	4628      	mov	r0, r5
 8001028:	47e0      	blx	ip
 800102a:	2800      	cmp	r0, #0
 800102c:	dc06      	bgt.n	800103c <__sflush_r+0xf8>
 800102e:	89a3      	ldrh	r3, [r4, #12]
 8001030:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001034:	81a3      	strh	r3, [r4, #12]
 8001036:	f04f 30ff 	mov.w	r0, #4294967295
 800103a:	e790      	b.n	8000f5e <__sflush_r+0x1a>
 800103c:	4407      	add	r7, r0
 800103e:	1a36      	subs	r6, r6, r0
 8001040:	e7ea      	b.n	8001018 <__sflush_r+0xd4>
 8001042:	bf00      	nop
 8001044:	dfbffffe 	.word	0xdfbffffe

08001048 <_fflush_r>:
 8001048:	b538      	push	{r3, r4, r5, lr}
 800104a:	690b      	ldr	r3, [r1, #16]
 800104c:	4605      	mov	r5, r0
 800104e:	460c      	mov	r4, r1
 8001050:	b913      	cbnz	r3, 8001058 <_fflush_r+0x10>
 8001052:	2500      	movs	r5, #0
 8001054:	4628      	mov	r0, r5
 8001056:	bd38      	pop	{r3, r4, r5, pc}
 8001058:	b118      	cbz	r0, 8001062 <_fflush_r+0x1a>
 800105a:	6a03      	ldr	r3, [r0, #32]
 800105c:	b90b      	cbnz	r3, 8001062 <_fflush_r+0x1a>
 800105e:	f7ff faa1 	bl	80005a4 <__sinit>
 8001062:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001066:	2b00      	cmp	r3, #0
 8001068:	d0f3      	beq.n	8001052 <_fflush_r+0xa>
 800106a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800106c:	07d0      	lsls	r0, r2, #31
 800106e:	d404      	bmi.n	800107a <_fflush_r+0x32>
 8001070:	0599      	lsls	r1, r3, #22
 8001072:	d402      	bmi.n	800107a <_fflush_r+0x32>
 8001074:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001076:	f7ff fb9a 	bl	80007ae <__retarget_lock_acquire_recursive>
 800107a:	4628      	mov	r0, r5
 800107c:	4621      	mov	r1, r4
 800107e:	f7ff ff61 	bl	8000f44 <__sflush_r>
 8001082:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001084:	07da      	lsls	r2, r3, #31
 8001086:	4605      	mov	r5, r0
 8001088:	d4e4      	bmi.n	8001054 <_fflush_r+0xc>
 800108a:	89a3      	ldrh	r3, [r4, #12]
 800108c:	059b      	lsls	r3, r3, #22
 800108e:	d4e1      	bmi.n	8001054 <_fflush_r+0xc>
 8001090:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001092:	f7ff fb8d 	bl	80007b0 <__retarget_lock_release_recursive>
 8001096:	e7dd      	b.n	8001054 <_fflush_r+0xc>

08001098 <__swbuf_r>:
 8001098:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800109a:	460e      	mov	r6, r1
 800109c:	4614      	mov	r4, r2
 800109e:	4605      	mov	r5, r0
 80010a0:	b118      	cbz	r0, 80010aa <__swbuf_r+0x12>
 80010a2:	6a03      	ldr	r3, [r0, #32]
 80010a4:	b90b      	cbnz	r3, 80010aa <__swbuf_r+0x12>
 80010a6:	f7ff fa7d 	bl	80005a4 <__sinit>
 80010aa:	69a3      	ldr	r3, [r4, #24]
 80010ac:	60a3      	str	r3, [r4, #8]
 80010ae:	89a3      	ldrh	r3, [r4, #12]
 80010b0:	071a      	lsls	r2, r3, #28
 80010b2:	d525      	bpl.n	8001100 <__swbuf_r+0x68>
 80010b4:	6923      	ldr	r3, [r4, #16]
 80010b6:	b31b      	cbz	r3, 8001100 <__swbuf_r+0x68>
 80010b8:	6823      	ldr	r3, [r4, #0]
 80010ba:	6922      	ldr	r2, [r4, #16]
 80010bc:	1a98      	subs	r0, r3, r2
 80010be:	6963      	ldr	r3, [r4, #20]
 80010c0:	b2f6      	uxtb	r6, r6
 80010c2:	4283      	cmp	r3, r0
 80010c4:	4637      	mov	r7, r6
 80010c6:	dc04      	bgt.n	80010d2 <__swbuf_r+0x3a>
 80010c8:	4621      	mov	r1, r4
 80010ca:	4628      	mov	r0, r5
 80010cc:	f7ff ffbc 	bl	8001048 <_fflush_r>
 80010d0:	b9e0      	cbnz	r0, 800110c <__swbuf_r+0x74>
 80010d2:	68a3      	ldr	r3, [r4, #8]
 80010d4:	3b01      	subs	r3, #1
 80010d6:	60a3      	str	r3, [r4, #8]
 80010d8:	6823      	ldr	r3, [r4, #0]
 80010da:	1c5a      	adds	r2, r3, #1
 80010dc:	6022      	str	r2, [r4, #0]
 80010de:	701e      	strb	r6, [r3, #0]
 80010e0:	6962      	ldr	r2, [r4, #20]
 80010e2:	1c43      	adds	r3, r0, #1
 80010e4:	429a      	cmp	r2, r3
 80010e6:	d004      	beq.n	80010f2 <__swbuf_r+0x5a>
 80010e8:	89a3      	ldrh	r3, [r4, #12]
 80010ea:	07db      	lsls	r3, r3, #31
 80010ec:	d506      	bpl.n	80010fc <__swbuf_r+0x64>
 80010ee:	2e0a      	cmp	r6, #10
 80010f0:	d104      	bne.n	80010fc <__swbuf_r+0x64>
 80010f2:	4621      	mov	r1, r4
 80010f4:	4628      	mov	r0, r5
 80010f6:	f7ff ffa7 	bl	8001048 <_fflush_r>
 80010fa:	b938      	cbnz	r0, 800110c <__swbuf_r+0x74>
 80010fc:	4638      	mov	r0, r7
 80010fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001100:	4621      	mov	r1, r4
 8001102:	4628      	mov	r0, r5
 8001104:	f000 f806 	bl	8001114 <__swsetup_r>
 8001108:	2800      	cmp	r0, #0
 800110a:	d0d5      	beq.n	80010b8 <__swbuf_r+0x20>
 800110c:	f04f 37ff 	mov.w	r7, #4294967295
 8001110:	e7f4      	b.n	80010fc <__swbuf_r+0x64>
	...

08001114 <__swsetup_r>:
 8001114:	b538      	push	{r3, r4, r5, lr}
 8001116:	4b2a      	ldr	r3, [pc, #168]	; (80011c0 <__swsetup_r+0xac>)
 8001118:	4605      	mov	r5, r0
 800111a:	6818      	ldr	r0, [r3, #0]
 800111c:	460c      	mov	r4, r1
 800111e:	b118      	cbz	r0, 8001128 <__swsetup_r+0x14>
 8001120:	6a03      	ldr	r3, [r0, #32]
 8001122:	b90b      	cbnz	r3, 8001128 <__swsetup_r+0x14>
 8001124:	f7ff fa3e 	bl	80005a4 <__sinit>
 8001128:	89a3      	ldrh	r3, [r4, #12]
 800112a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800112e:	0718      	lsls	r0, r3, #28
 8001130:	d422      	bmi.n	8001178 <__swsetup_r+0x64>
 8001132:	06d9      	lsls	r1, r3, #27
 8001134:	d407      	bmi.n	8001146 <__swsetup_r+0x32>
 8001136:	2309      	movs	r3, #9
 8001138:	602b      	str	r3, [r5, #0]
 800113a:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800113e:	81a3      	strh	r3, [r4, #12]
 8001140:	f04f 30ff 	mov.w	r0, #4294967295
 8001144:	e034      	b.n	80011b0 <__swsetup_r+0x9c>
 8001146:	0758      	lsls	r0, r3, #29
 8001148:	d512      	bpl.n	8001170 <__swsetup_r+0x5c>
 800114a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800114c:	b141      	cbz	r1, 8001160 <__swsetup_r+0x4c>
 800114e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001152:	4299      	cmp	r1, r3
 8001154:	d002      	beq.n	800115c <__swsetup_r+0x48>
 8001156:	4628      	mov	r0, r5
 8001158:	f7ff fb2c 	bl	80007b4 <_free_r>
 800115c:	2300      	movs	r3, #0
 800115e:	6363      	str	r3, [r4, #52]	; 0x34
 8001160:	89a3      	ldrh	r3, [r4, #12]
 8001162:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001166:	81a3      	strh	r3, [r4, #12]
 8001168:	2300      	movs	r3, #0
 800116a:	6063      	str	r3, [r4, #4]
 800116c:	6923      	ldr	r3, [r4, #16]
 800116e:	6023      	str	r3, [r4, #0]
 8001170:	89a3      	ldrh	r3, [r4, #12]
 8001172:	f043 0308 	orr.w	r3, r3, #8
 8001176:	81a3      	strh	r3, [r4, #12]
 8001178:	6923      	ldr	r3, [r4, #16]
 800117a:	b94b      	cbnz	r3, 8001190 <__swsetup_r+0x7c>
 800117c:	89a3      	ldrh	r3, [r4, #12]
 800117e:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001182:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001186:	d003      	beq.n	8001190 <__swsetup_r+0x7c>
 8001188:	4621      	mov	r1, r4
 800118a:	4628      	mov	r0, r5
 800118c:	f000 f850 	bl	8001230 <__smakebuf_r>
 8001190:	89a0      	ldrh	r0, [r4, #12]
 8001192:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001196:	f010 0301 	ands.w	r3, r0, #1
 800119a:	d00a      	beq.n	80011b2 <__swsetup_r+0x9e>
 800119c:	2300      	movs	r3, #0
 800119e:	60a3      	str	r3, [r4, #8]
 80011a0:	6963      	ldr	r3, [r4, #20]
 80011a2:	425b      	negs	r3, r3
 80011a4:	61a3      	str	r3, [r4, #24]
 80011a6:	6923      	ldr	r3, [r4, #16]
 80011a8:	b943      	cbnz	r3, 80011bc <__swsetup_r+0xa8>
 80011aa:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80011ae:	d1c4      	bne.n	800113a <__swsetup_r+0x26>
 80011b0:	bd38      	pop	{r3, r4, r5, pc}
 80011b2:	0781      	lsls	r1, r0, #30
 80011b4:	bf58      	it	pl
 80011b6:	6963      	ldrpl	r3, [r4, #20]
 80011b8:	60a3      	str	r3, [r4, #8]
 80011ba:	e7f4      	b.n	80011a6 <__swsetup_r+0x92>
 80011bc:	2000      	movs	r0, #0
 80011be:	e7f7      	b.n	80011b0 <__swsetup_r+0x9c>
 80011c0:	20000060 	.word	0x20000060

080011c4 <_sbrk_r>:
 80011c4:	b538      	push	{r3, r4, r5, lr}
 80011c6:	4d06      	ldr	r5, [pc, #24]	; (80011e0 <_sbrk_r+0x1c>)
 80011c8:	2300      	movs	r3, #0
 80011ca:	4604      	mov	r4, r0
 80011cc:	4608      	mov	r0, r1
 80011ce:	602b      	str	r3, [r5, #0]
 80011d0:	f7ff f8fc 	bl	80003cc <_sbrk>
 80011d4:	1c43      	adds	r3, r0, #1
 80011d6:	d102      	bne.n	80011de <_sbrk_r+0x1a>
 80011d8:	682b      	ldr	r3, [r5, #0]
 80011da:	b103      	cbz	r3, 80011de <_sbrk_r+0x1a>
 80011dc:	6023      	str	r3, [r4, #0]
 80011de:	bd38      	pop	{r3, r4, r5, pc}
 80011e0:	200001c4 	.word	0x200001c4

080011e4 <__swhatbuf_r>:
 80011e4:	b570      	push	{r4, r5, r6, lr}
 80011e6:	460c      	mov	r4, r1
 80011e8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80011ec:	2900      	cmp	r1, #0
 80011ee:	b096      	sub	sp, #88	; 0x58
 80011f0:	4615      	mov	r5, r2
 80011f2:	461e      	mov	r6, r3
 80011f4:	da0d      	bge.n	8001212 <__swhatbuf_r+0x2e>
 80011f6:	89a3      	ldrh	r3, [r4, #12]
 80011f8:	f013 0f80 	tst.w	r3, #128	; 0x80
 80011fc:	f04f 0100 	mov.w	r1, #0
 8001200:	bf0c      	ite	eq
 8001202:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8001206:	2340      	movne	r3, #64	; 0x40
 8001208:	2000      	movs	r0, #0
 800120a:	6031      	str	r1, [r6, #0]
 800120c:	602b      	str	r3, [r5, #0]
 800120e:	b016      	add	sp, #88	; 0x58
 8001210:	bd70      	pop	{r4, r5, r6, pc}
 8001212:	466a      	mov	r2, sp
 8001214:	f000 f848 	bl	80012a8 <_fstat_r>
 8001218:	2800      	cmp	r0, #0
 800121a:	dbec      	blt.n	80011f6 <__swhatbuf_r+0x12>
 800121c:	9901      	ldr	r1, [sp, #4]
 800121e:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8001222:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8001226:	4259      	negs	r1, r3
 8001228:	4159      	adcs	r1, r3
 800122a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800122e:	e7eb      	b.n	8001208 <__swhatbuf_r+0x24>

08001230 <__smakebuf_r>:
 8001230:	898b      	ldrh	r3, [r1, #12]
 8001232:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001234:	079d      	lsls	r5, r3, #30
 8001236:	4606      	mov	r6, r0
 8001238:	460c      	mov	r4, r1
 800123a:	d507      	bpl.n	800124c <__smakebuf_r+0x1c>
 800123c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001240:	6023      	str	r3, [r4, #0]
 8001242:	6123      	str	r3, [r4, #16]
 8001244:	2301      	movs	r3, #1
 8001246:	6163      	str	r3, [r4, #20]
 8001248:	b002      	add	sp, #8
 800124a:	bd70      	pop	{r4, r5, r6, pc}
 800124c:	ab01      	add	r3, sp, #4
 800124e:	466a      	mov	r2, sp
 8001250:	f7ff ffc8 	bl	80011e4 <__swhatbuf_r>
 8001254:	9900      	ldr	r1, [sp, #0]
 8001256:	4605      	mov	r5, r0
 8001258:	4630      	mov	r0, r6
 800125a:	f7ff fb15 	bl	8000888 <_malloc_r>
 800125e:	b948      	cbnz	r0, 8001274 <__smakebuf_r+0x44>
 8001260:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001264:	059a      	lsls	r2, r3, #22
 8001266:	d4ef      	bmi.n	8001248 <__smakebuf_r+0x18>
 8001268:	f023 0303 	bic.w	r3, r3, #3
 800126c:	f043 0302 	orr.w	r3, r3, #2
 8001270:	81a3      	strh	r3, [r4, #12]
 8001272:	e7e3      	b.n	800123c <__smakebuf_r+0xc>
 8001274:	89a3      	ldrh	r3, [r4, #12]
 8001276:	6020      	str	r0, [r4, #0]
 8001278:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800127c:	81a3      	strh	r3, [r4, #12]
 800127e:	9b00      	ldr	r3, [sp, #0]
 8001280:	6163      	str	r3, [r4, #20]
 8001282:	9b01      	ldr	r3, [sp, #4]
 8001284:	6120      	str	r0, [r4, #16]
 8001286:	b15b      	cbz	r3, 80012a0 <__smakebuf_r+0x70>
 8001288:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800128c:	4630      	mov	r0, r6
 800128e:	f000 f81d 	bl	80012cc <_isatty_r>
 8001292:	b128      	cbz	r0, 80012a0 <__smakebuf_r+0x70>
 8001294:	89a3      	ldrh	r3, [r4, #12]
 8001296:	f023 0303 	bic.w	r3, r3, #3
 800129a:	f043 0301 	orr.w	r3, r3, #1
 800129e:	81a3      	strh	r3, [r4, #12]
 80012a0:	89a3      	ldrh	r3, [r4, #12]
 80012a2:	431d      	orrs	r5, r3
 80012a4:	81a5      	strh	r5, [r4, #12]
 80012a6:	e7cf      	b.n	8001248 <__smakebuf_r+0x18>

080012a8 <_fstat_r>:
 80012a8:	b538      	push	{r3, r4, r5, lr}
 80012aa:	4d07      	ldr	r5, [pc, #28]	; (80012c8 <_fstat_r+0x20>)
 80012ac:	2300      	movs	r3, #0
 80012ae:	4604      	mov	r4, r0
 80012b0:	4608      	mov	r0, r1
 80012b2:	4611      	mov	r1, r2
 80012b4:	602b      	str	r3, [r5, #0]
 80012b6:	f7ff f863 	bl	8000380 <_fstat>
 80012ba:	1c43      	adds	r3, r0, #1
 80012bc:	d102      	bne.n	80012c4 <_fstat_r+0x1c>
 80012be:	682b      	ldr	r3, [r5, #0]
 80012c0:	b103      	cbz	r3, 80012c4 <_fstat_r+0x1c>
 80012c2:	6023      	str	r3, [r4, #0]
 80012c4:	bd38      	pop	{r3, r4, r5, pc}
 80012c6:	bf00      	nop
 80012c8:	200001c4 	.word	0x200001c4

080012cc <_isatty_r>:
 80012cc:	b538      	push	{r3, r4, r5, lr}
 80012ce:	4d06      	ldr	r5, [pc, #24]	; (80012e8 <_isatty_r+0x1c>)
 80012d0:	2300      	movs	r3, #0
 80012d2:	4604      	mov	r4, r0
 80012d4:	4608      	mov	r0, r1
 80012d6:	602b      	str	r3, [r5, #0]
 80012d8:	f7ff f861 	bl	800039e <_isatty>
 80012dc:	1c43      	adds	r3, r0, #1
 80012de:	d102      	bne.n	80012e6 <_isatty_r+0x1a>
 80012e0:	682b      	ldr	r3, [r5, #0]
 80012e2:	b103      	cbz	r3, 80012e6 <_isatty_r+0x1a>
 80012e4:	6023      	str	r3, [r4, #0]
 80012e6:	bd38      	pop	{r3, r4, r5, pc}
 80012e8:	200001c4 	.word	0x200001c4

080012ec <_init>:
 80012ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012ee:	bf00      	nop
 80012f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80012f2:	bc08      	pop	{r3}
 80012f4:	469e      	mov	lr, r3
 80012f6:	4770      	bx	lr

080012f8 <_fini>:
 80012f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012fa:	bf00      	nop
 80012fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80012fe:	bc08      	pop	{r3}
 8001300:	469e      	mov	lr, r3
 8001302:	4770      	bx	lr
